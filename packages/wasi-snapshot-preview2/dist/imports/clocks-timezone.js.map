{"version":3,"file":"clocks-timezone.js","sourceRoot":"","sources":["../../src/imports/clocks-timezone.ts"],"names":[],"mappings":"","sourcesContent":["export interface ClocksTimezone {\n  /**\n   * Return information needed to display the given `datetime`. This includes\n   * the UTC offset, the time zone name, and a flag indicating whether\n   * daylight saving time is active.\n   * \n   * If the timezone cannot be determined for the given `datetime`, return a\n   * `timezone-display` for `UTC` with a `utc-offset` of 0 and no daylight\n   * saving time.\n   */\n   display(this0: Timezone, when: Datetime): TimezoneDisplay;\n  /**\n   * The same as `display`, but only return the UTC offset.\n   */\n   utcOffset(this0: Timezone, when: Datetime): number;\n  /**\n   * Dispose of the specified input-stream, after which it may no longer\n   * be used.\n   */\n   dropTimezone(this0: Timezone): void;\n}\nexport interface ClocksTimezoneAsync {\n  /**\n   * Return information needed to display the given `datetime`. This includes\n   * the UTC offset, the time zone name, and a flag indicating whether\n   * daylight saving time is active.\n   * \n   * If the timezone cannot be determined for the given `datetime`, return a\n   * `timezone-display` for `UTC` with a `utc-offset` of 0 and no daylight\n   * saving time.\n   */\n   display(this0: Timezone, when: Datetime): Promise<TimezoneDisplay>;\n  /**\n   * The same as `display`, but only return the UTC offset.\n   */\n   utcOffset(this0: Timezone, when: Datetime): Promise<number>;\n  /**\n   * Dispose of the specified input-stream, after which it may no longer\n   * be used.\n   */\n   dropTimezone(this0: Timezone): Promise<void>;\n}\nimport type { Datetime } from '../imports/clocks-wall-clock';\nexport { Datetime };\n/**\n * Information useful for displaying the timezone of a specific `datetime`.\n * \n * This information may vary within a single `timezone` to reflect daylight\n * saving time adjustments.\n */\nexport interface TimezoneDisplay {\n  /**\n   * The number of seconds difference between UTC time and the local\n   * time of the timezone.\n   * \n   * The returned value will always be less than 86400 which is the\n   * number of seconds in a day (24*60*60).\n   * \n   * In implementations that do not expose an actual time zone, this\n   * should return 0.\n   */\n  utcOffset: number,\n  /**\n   * The abbreviated name of the timezone to display to a user. The name\n   * `UTC` indicates Coordinated Universal Time. Otherwise, this should\n   * reference local standards for the name of the time zone.\n   * \n   * In implementations that do not expose an actual time zone, this\n   * should be the string `UTC`.\n   * \n   * In time zones that do not have an applicable name, a formatted\n   * representation of the UTC offset may be returned, such as `-04:00`.\n   */\n  name: string,\n  /**\n   * Whether daylight saving time is active.\n   * \n   * In implementations that do not expose an actual time zone, this\n   * should return false.\n   */\n  inDaylightSavingTime: boolean,\n}\n/**\n * A timezone.\n * \n * In timezones that recognize daylight saving time, also known as daylight\n * time and summer time, the information returned from the functions varies\n * over time to reflect these adjustments.\n * \n * This [represents a resource](https://github.com/WebAssembly/WASI/blob/main/docs/WitInWasi.md#Resources).\n */\nexport type Timezone = number;\n"]}