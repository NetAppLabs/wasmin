{"version":3,"file":"sockets-network.js","sourceRoot":"","sources":["../../src/imports/sockets-network.ts"],"names":[],"mappings":"","sourcesContent":["export interface SocketsNetwork {\n  /**\n   * Dispose of the specified `network`, after which it may no longer be used.\n   * \n   * Note: this function is scheduled to be removed when Resources are natively supported in Wit.\n   */\n   dropNetwork(this0: Network): void;\n}\nexport interface SocketsNetworkAsync {\n  /**\n   * Dispose of the specified `network`, after which it may no longer be used.\n   * \n   * Note: this function is scheduled to be removed when Resources are natively supported in Wit.\n   */\n   dropNetwork(this0: Network): Promise<void>;\n}\n/**\n * An opaque resource that represents access to (a subset of) the network.\n * This enables context-based security for networking.\n * There is no need for this to map 1:1 to a physical network interface.\n * \n * FYI, In the future this will be replaced by handle types.\n */\nexport type Network = number;\nexport type Ipv6Address = [number, number, number, number, number, number, number, number];\nexport interface Ipv6SocketAddress {\n  port: number,\n  flowInfo: number,\n  address: Ipv6Address,\n  scopeId: number,\n}\nexport type Ipv4Address = [number, number, number, number];\nexport interface Ipv4SocketAddress {\n  port: number,\n  address: Ipv4Address,\n}\nexport type IpSocketAddress = IpSocketAddressIpv4 | IpSocketAddressIpv6;\nexport interface IpSocketAddressIpv4 {\n  tag: 'ipv4',\n  val: Ipv4SocketAddress,\n}\nexport interface IpSocketAddressIpv6 {\n  tag: 'ipv6',\n  val: Ipv6SocketAddress,\n}\n/**\n * # Variants\n * \n * ## `\"ipv4\"`\n * \n * Similar to `AF_INET` in POSIX.\n * \n * ## `\"ipv6\"`\n * \n * Similar to `AF_INET6` in POSIX.\n */\nexport type IpAddressFamily = 'ipv4' | 'ipv6';\nexport type IpAddress = IpAddressIpv4 | IpAddressIpv6;\nexport interface IpAddressIpv4 {\n  tag: 'ipv4',\n  val: Ipv4Address,\n}\nexport interface IpAddressIpv6 {\n  tag: 'ipv6',\n  val: Ipv6Address,\n}\n/**\n * Error codes.\n * \n * In theory, every API can return any error code.\n * In practice, API's typically only return the errors documented per API\n * combined with a couple of errors that are always possible:\n * - `unknown`\n * - `access-denied`\n * - `not-supported`\n * - `out-of-memory`\n * \n * See each individual API for what the POSIX equivalents are. They sometimes differ per API.\n * \n * # Variants\n * \n * ## `\"unknown\"`\n * \n * Unknown error\n * \n * ## `\"access-denied\"`\n * \n * Access denied.\n * \n * POSIX equivalent: EACCES, EPERM\n * \n * ## `\"not-supported\"`\n * \n * The operation is not supported.\n * \n * POSIX equivalent: EOPNOTSUPP\n * \n * ## `\"out-of-memory\"`\n * \n * Not enough memory to complete the operation.\n * \n * POSIX equivalent: ENOMEM, ENOBUFS, EAI_MEMORY\n * \n * ## `\"timeout\"`\n * \n * The operation timed out before it could finish completely.\n * \n * ## `\"concurrency-conflict\"`\n * \n * This operation is incompatible with another asynchronous operation that is already in progress.\n * \n * ## `\"not-in-progress\"`\n * \n * Trying to finish an asynchronous operation that:\n * - has not been started yet, or:\n * - was already finished by a previous `finish-*` call.\n * \n * Note: this is scheduled to be removed when `future`s are natively supported.\n * \n * ## `\"would-block\"`\n * \n * The operation has been aborted because it could not be completed immediately.\n * \n * Note: this is scheduled to be removed when `future`s are natively supported.\n * \n * ## `\"address-family-not-supported\"`\n * \n * The specified address-family is not supported.\n * \n * ## `\"address-family-mismatch\"`\n * \n * An IPv4 address was passed to an IPv6 resource, or vice versa.\n * \n * ## `\"invalid-remote-address\"`\n * \n * The socket address is not a valid remote address. E.g. the IP address is set to INADDR_ANY, or the port is set to 0.\n * \n * ## `\"ipv4-only-operation\"`\n * \n * The operation is only supported on IPv4 resources.\n * \n * ## `\"ipv6-only-operation\"`\n * \n * The operation is only supported on IPv6 resources.\n * \n * ## `\"new-socket-limit\"`\n * \n * A new socket resource could not be created because of a system limit.\n * \n * ## `\"already-attached\"`\n * \n * The socket is already attached to another network.\n * \n * ## `\"already-bound\"`\n * \n * The socket is already bound.\n * \n * ## `\"already-connected\"`\n * \n * The socket is already in the Connection state.\n * \n * ## `\"not-bound\"`\n * \n * The socket is not bound to any local address.\n * \n * ## `\"not-connected\"`\n * \n * The socket is not in the Connection state.\n * \n * ## `\"address-not-bindable\"`\n * \n * A bind operation failed because the provided address is not an address that the `network` can bind to.\n * \n * ## `\"address-in-use\"`\n * \n * A bind operation failed because the provided address is already in use.\n * \n * ## `\"ephemeral-ports-exhausted\"`\n * \n * A bind operation failed because there are no ephemeral ports available.\n * \n * ## `\"remote-unreachable\"`\n * \n * The remote address is not reachable\n * \n * ## `\"already-listening\"`\n * \n * The socket is already in the Listener state.\n * \n * ## `\"not-listening\"`\n * \n * The socket is already in the Listener state.\n * \n * ## `\"connection-refused\"`\n * \n * The connection was forcefully rejected\n * \n * ## `\"connection-reset\"`\n * \n * The connection was reset.\n * \n * ## `\"datagram-too-large\"`\n * \n * ## `\"invalid-name\"`\n * \n * The provided name is a syntactically invalid domain name.\n * \n * ## `\"name-unresolvable\"`\n * \n * Name does not exist or has no suitable associated IP addresses.\n * \n * ## `\"temporary-resolver-failure\"`\n * \n * A temporary failure in name resolution occurred.\n * \n * ## `\"permanent-resolver-failure\"`\n * \n * A permanent failure in name resolution occurred.\n */\nexport type ErrorCode = 'unknown' | 'access-denied' | 'not-supported' | 'out-of-memory' | 'timeout' | 'concurrency-conflict' | 'not-in-progress' | 'would-block' | 'address-family-not-supported' | 'address-family-mismatch' | 'invalid-remote-address' | 'ipv4-only-operation' | 'ipv6-only-operation' | 'new-socket-limit' | 'already-attached' | 'already-bound' | 'already-connected' | 'not-bound' | 'not-connected' | 'address-not-bindable' | 'address-in-use' | 'ephemeral-ports-exhausted' | 'remote-unreachable' | 'already-listening' | 'not-listening' | 'connection-refused' | 'connection-reset' | 'datagram-too-large' | 'invalid-name' | 'name-unresolvable' | 'temporary-resolver-failure' | 'permanent-resolver-failure';\n"]}