{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { NfsMount, ComponentNfsRsNfs, ReaddirplusEntry, ObjRes } from \"./interfaces/component-nfs-rs-nfs.js\";\nimport { instantiate } from \"./nfs_rs.js\";\nimport { WASIWorker } from \"@wasmin/wasi-js\";\nimport {\n    NFileSystemWritableFileStream,\n    PreNameCheck,\n    InvalidModificationError,\n    NotFoundError,\n    SyntaxError,\n    TypeMismatchError,\n    Stat,\n} from \"@wasmin/fs-js\";\nimport process from \"node:process\";\n\nconst ACCESS3_READ = 0x0001;\nconst ACCESS3_LOOKUP = 0x0002;\nconst ACCESS3_MODIFY = 0x0004;\nconst ACCESS3_EXTEND = 0x0008;\nconst ACCESS3_DELETE = 0x0010;\nconst ACCESS3_EXECUTE = 0x0020;\n\nconst NFS3_OK = 0;\nconst NFS3ERR_PERM = 1;\nconst NFS3ERR_NOENT = 2;\nconst NFS3ERR_IO = 5;\nconst NFS3ERR_NXIO = 6;\nconst NFS3ERR_ACCES = 13;\nconst NFS3ERR_EXIST = 17;\nconst NFS3ERR_XDEV = 18;\nconst NFS3ERR_NODEV = 19;\nconst NFS3ERR_NOTDIR = 20;\nconst NFS3ERR_ISDIR = 21;\nconst NFS3ERR_INVAL = 22;\nconst NFS3ERR_FBIG = 27;\nconst NFS3ERR_NOSPC = 28;\nconst NFS3ERR_ROFS = 30;\nconst NFS3ERR_MLINK = 31;\nconst NFS3ERR_NAMETOOLONG = 63;\nconst NFS3ERR_NOTEMPTY = 66;\nconst NFS3ERR_DQUOT = 69;\nconst NFS3ERR_STALE = 70;\nconst NFS3ERR_REMOTE = 71;\nconst NFS3ERR_BADHANDLE = 10001;\nconst NFS3ERR_NOT_SYNC = 10002;\nconst NFS3ERR_BAD_COOKIE = 10003;\nconst NFS3ERR_NOTSUPP = 10004;\nconst NFS3ERR_TOOSMALL = 10005;\nconst NFS3ERR_SERVERFAULT = 10006;\nconst NFS3ERR_BADTYPE = 10007;\nconst NFS3ERR_JUKEBOX = 10008;\n\nconst AttrTypeDirectory = 2;\nconst AccessRead = ACCESS3_READ | ACCESS3_LOOKUP | ACCESS3_EXECUTE;\nconst AccessReadWrite = AccessRead | ACCESS3_MODIFY | ACCESS3_EXTEND | ACCESS3_DELETE;\n\nlet READDIRPLUS_CACHE_LIFETIME_MS = 1000;\n\ndeclare global {\n    var NFS_JS_DEBUG: boolean;\n}\nglobalThis.NFS_JS_DEBUG = false;\n\nexport function nfsDebug(msg?: any, ...optionalParams: any[]): void {\n    if (globalThis.NFS_JS_DEBUG) {\n        console.log(msg, ...optionalParams);\n    }\n}\n\n// XXX: elsewhere reads are getting sliced into 4k chunks but 32k chunks seem to work fine (and faster)\n//      have tried larger chunks (e.g. 64k) which seem to still work but are only marginally faster so...\nlet MAX_READ_SIZE = 32768;\nif (process !== undefined) {\n    if (process.env !== undefined) {\n        let max_read = process.env.WASMIN_MAX_NFS_READ_SIZE\n        if (max_read) {\n            MAX_READ_SIZE = Number(max_read);\n        }\n    }\n}\n\nfunction isNumber(numVal: any) {\n    return !isNaN(parseFloat(numVal)) && isFinite(numVal);\n}\n\n/**\n * \n * preparse url so that params on url string are read, params supported are:\n * \n * rwsize [block size for max read/write in bytes]\n * cachems [cache time-to-live for readdirplus in ms]\n * \n * @param url URL string like 'nfs://127.0.0.1/volume-1?nfsport=2049&mountport=6635&rwsize=1048576'\n */\nfunction preParseUrlString(url: string) {\n    const indexOfQuestion = url.indexOf(\"?\");\n    if (indexOfQuestion > 0 ) {\n        let queryString = url.substring(indexOfQuestion+1);\n        const urlSearchParams = new URLSearchParams(queryString);\n        for (const p of urlSearchParams) {\n            let paramName = p[0];\n            let paramVal = p[1];\n            if (paramName == \"rwsize\") {\n                if (isNumber(paramVal)) {\n                    MAX_READ_SIZE = parseInt(paramVal);\n                    nfsDebug(`Setting MAX_READ_SIZE: ${MAX_READ_SIZE}`);\n                }\n            } else if (paramName == \"cachems\") {\n                if (isNumber(paramVal)) {\n                    READDIRPLUS_CACHE_LIFETIME_MS = parseInt(paramVal);\n                    nfsDebug(`Setting READDIRPLUS_CACHE_LIFETIME_MS: ${READDIRPLUS_CACHE_LIFETIME_MS}`);\n                }\n            }\n        }\n    }\n}\n\n// Extended to hold NfsDirectoryHandle cached entry for reference\nexport interface ReaddirplusEntryCached extends ReaddirplusEntry {\n    directoryHandle?: NfsDirectoryHandle,\n}\n\n\nfunction fullNameFromReaddirplusEntry(parentName: string, entry: ReaddirplusEntry): string {\n    const suffix = entry.attr?.attrType === AttrTypeDirectory ? \"/\" : \"\";\n    return parentName + entry.fileName + suffix;\n}\n\nconst isNode = typeof process !== \"undefined\" && process.versions && process.versions.node;\nlet _fs: any;\nasync function fetchCompile(url: URL) {\n    if (url.protocol === \"compiled:\" || url.pathname.startsWith(\"/$bunfs/root/\")) {\n        const filePaths = url.pathname.split(\"/\");\n        const fileName = filePaths[filePaths.length - 1];\n        url = new URL(fileName, \"file:///tmp/wasmin-tmp/\");\n    }\n    if (isNode) {\n        _fs = _fs || (await import(\"node:fs/promises\"));\n        return WebAssembly.compile(await _fs.readFile(url));\n    }\n    return fetch(url).then(WebAssembly.compileStreaming);\n}\n\nasync function compileCore(url: string) {\n    if (url == \"nfs_rs.core.wasm\") {\n        const metaUrl = new URL(\"./nfs_rs.core.wasm\", import.meta.url);\n        return await fetchCompile(metaUrl);\n    } else if (url == \"nfs_rs.core2.wasm\") {\n        const metaUrl = new URL(\"./nfs_rs.core2.wasm\", import.meta.url);\n        return await fetchCompile(metaUrl);\n    } else if (url == \"nfs_rs.core3.wasm\") {\n        const metaUrl = new URL(\"./nfs_rs.core3.wasm\", import.meta.url);\n        return await fetchCompile(metaUrl);\n    } else if (url == \"nfs_rs.core4.wasm\") {\n        const metaUrl = new URL(\"./nfs_rs.core4.wasm\", import.meta.url);\n        return await fetchCompile(metaUrl);\n    } else {\n        throw new Error(`unsupported wasm URL: ${url}`);\n    }\n}\n\nlet wasi: WASIWorker | undefined;\nlet nfsComponent: typeof ComponentNfsRsNfs;\nlet instantiation: Promise<WASIWorker> | undefined;\n\nasync function ensureInstantiation() {\n    if (!instantiation) {\n        instantiation = new Promise(async (resolve, reject) => {\n            wasi = new WASIWorker({});\n            await wasi\n                .createWorker()\n                .then((componentImports) => instantiate(compileCore, componentImports as any))\n                .then((instance) => (nfsComponent = instance.nfs))\n                .catch((e) => reject(e));\n            resolve(wasi);\n        });\n    }\n    await instantiation;\n}\n\nexport interface NfsHandlePermissionDescriptor {\n    mode: \"read\" | \"readwrite\";\n}\n\nexport interface NfsDirectoryHandleParent {\n    parentDir?: NfsDirectoryHandle,\n    mount?: NfsMount,\n    fhDir?: Uint8Array,\n}\n\nexport class NfsHandle implements FileSystemHandle {\n    protected _parent?: NfsDirectoryHandle;\n    protected _mount: NfsMount;\n    protected _fhDir: Uint8Array;\n    protected _fh: Uint8Array;\n    protected _fileid: bigint;\n    protected _fullName: string;\n    readonly kind: FileSystemHandleKind;\n    readonly name: string;\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isFile: boolean;\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isDirectory: boolean;\n    constructor(parent: NfsDirectoryHandleParent, fh: Uint8Array, fileid: bigint, kind: FileSystemHandleKind, fullName: string, name: string) {\n        if (parent.parentDir) {\n            const parentDir = parent.parentDir\n            this._parent = parentDir;\n            this._mount = parentDir._mount;\n            this._fhDir = parentDir._fh;\n        } else if (parent.mount && parent.fhDir) {\n            this._mount = parent.mount;\n            this._fhDir = parent.fhDir;\n        } else {\n            throw new Error(\"Invalid Parent Directory File Descriptor\");\n        }\n        this._fh = fh;\n        this._fileid = fileid;\n        this._fullName = fullName;\n        this.kind = kind;\n        this.name = name;\n        this.isFile = kind == \"file\";\n        this.isDirectory = kind == \"directory\";\n    }\n    isSameEntry(other: FileSystemHandle): Promise<boolean> {\n        return new Promise(async (resolve) => {\n            const anyOther = other as any;\n            if (anyOther._mount && anyOther._mount !== this._mount) {\n                resolve(false);\n            } else {\n                resolve(\n                    other.kind === this.kind &&\n                    other.name === this.name &&\n                    (!anyOther._fileid || anyOther._fileid === this._fileid) &&\n                    (!anyOther._fullName || anyOther._fullName === this._fullName)\n                );\n            }\n        });\n    }\n    async queryPermission(perm?: NfsHandlePermissionDescriptor): Promise<PermissionState> {\n        return new Promise(async (resolve, reject) => {\n            const mode = perm?.mode === \"readwrite\" ? AccessReadWrite : AccessRead;\n            const ret = this._mount.access(this._fh, mode);\n            if (ret !== 0) {\n                // XXX: ACCESS3_EXECUTE may be omitted for root directory access but we should still return 'granted'\n                resolve(\n                    ret === mode || (this._fullName === \"/\" && (ret | ACCESS3_EXECUTE) === mode) ? \"granted\" : \"denied\"\n                );\n            } else {\n                reject(\"access denied\");\n            }\n        });\n    }\n    async requestPermission(perm: NfsHandlePermissionDescriptor): Promise<PermissionState> {\n        return new Promise(async (resolve, reject) => {\n            const mode = perm.mode === \"readwrite\" ? AccessReadWrite : AccessRead;\n            try {\n                this._mount.setattr(this._fh, undefined, mode, undefined, undefined, undefined, undefined, undefined);\n                resolve(\"granted\");\n            } catch (e: any) {\n                if (e.payload?.nfsErrorCode === NFS3ERR_PERM || e.payload?.nfsErrorCode === NFS3ERR_ACCES) {\n                    resolve(\"denied\");\n                } else {\n                    reject(e);\n                }\n            }\n        });\n    }\n    async stat(): Promise<Stat> {\n        if (this._parent) {\n            // Using cache from readdirplus\n            try {\n                const objRet = await this._parent.getEntryCachedByFileHandle(this._fh);\n                if (objRet !== undefined && objRet.attr !== undefined) {\n                    const attr = objRet.attr;\n                    const mtime = BigInt(attr.mtime.seconds) * 1_000_000_000n + BigInt(attr.mtime.nseconds);\n                    const atime = BigInt(attr.atime.seconds) * 1_000_000_000n + BigInt(attr.atime.nseconds);        \n                    const stats: Stat = {\n                        inode: attr.fileid,\n                        size: attr.filesize,\n                        creationTime: mtime,\n                        modifiedTime: mtime,\n                        accessedTime: atime,\n                    };\n                    return stats;\n                }\n            } catch (err: any) {\n                const name = this._fullName;\n                nfsDebug(`stat() err for ${name}: `, err);\n            }\n        }\n        const attr = this._mount.getattr(this._fh);\n        const mtime = BigInt(attr.mtime.seconds) * 1_000_000_000n + BigInt(attr.mtime.nseconds);\n        const atime = BigInt(attr.atime.seconds) * 1_000_000_000n + BigInt(attr.atime.nseconds);\n        const stats: Stat = {\n            inode: attr.fileid,\n            size: attr.filesize,\n            creationTime: mtime,\n            modifiedTime: mtime,\n            accessedTime: atime,\n        };\n        return stats;\n    }\n}\n\nclass ReaddirplusEntryCache {\n    timestamp: number;\n    entries?: Promise<ReaddirplusEntryCached[]>;\n    constructor(timestamp?: number) {\n        this.timestamp = timestamp ?? 0;\n    }\n}\n\nexport class NfsDirectoryHandle extends NfsHandle implements FileSystemDirectoryHandle {\n    [Symbol.asyncIterator]: NfsDirectoryHandle[\"entries\"] = this.entries;\n    readonly kind: \"directory\";\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isFile: false;\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isDirectory: true;\n    protected _readdirplusEntryCache: ReaddirplusEntryCache;\n    constructor(url: string);\n    constructor(toWrap: NfsHandle);\n    constructor(param: string | NfsHandle) {\n        let parent: NfsDirectoryHandleParent;\n        let mount: NfsMount;\n        let fhDir: Uint8Array;\n        let fh: Uint8Array;\n        let fileid: bigint;\n        let kind: FileSystemHandleKind;\n        let fullName: string;\n        let name: string;\n        if (typeof param === \"string\") {\n            const url = param;\n            preParseUrlString(url);\n            mount = nfsComponent.parseUrlAndMount(url);\n            const res = mount.lookupPath(\"/\");\n            fh = res.obj;\n            fhDir = fh;\n            fileid = res.attr ? res.attr.fileid : mount.getattr(fh).fileid;\n            kind = \"directory\";\n            fullName = \"/\";\n            name = \"\";\n            parent = {\n                mount: mount,\n                fhDir: fhDir,\n            };\n        } else {\n            const dirHandleParam = param as NfsDirectoryHandle;\n            const parentToWrap = dirHandleParam._parent!;\n            mount = dirHandleParam._mount;\n            fhDir = dirHandleParam._fhDir;\n            fh = dirHandleParam._fh;\n            fileid = dirHandleParam._fileid;\n            kind = dirHandleParam.kind;\n            fullName = dirHandleParam._fullName;\n            name = dirHandleParam.name;\n            parent = {\n                parentDir: parentToWrap,\n            };\n        }\n        super(parent, fh, fileid, kind, fullName, name);\n        this[Symbol.asyncIterator] = this.entries;\n        this.kind = \"directory\";\n        this.isFile = false;\n        this.isDirectory = true;\n        this.getEntries = this.values;\n        this._readdirplusEntryCache = new ReaddirplusEntryCache();\n    }\n\n    private invalidateReaddirplusCache() {\n        this._readdirplusEntryCache.timestamp = 0;\n        this._readdirplusEntryCache.entries = undefined;\n    }\n    public async getEntryCachedByFileHandle(fh: Uint8Array): Promise<ObjRes|undefined> {\n        const entries = await this.readdirplus();\n        for (const entry of entries) {\n            if (entry.handle == fh) {\n                const objRet: ObjRes = {\n                    obj: entry.handle,\n                    attr: entry.attr,\n                }\n                return objRet;\n            }\n        }\n        return undefined;\n    }\n\n    getNameNormalized(name: string) {\n        let retName = name;\n        if (name == \"/\") {\n            retName = name;\n        } else if (name.startsWith(\"/\")) {\n            retName = name.substring(1);\n        }\n        return retName;\n    }\n\n    isSameNameNormalized(name1: string, name2: string) {\n        const name1Normalized = this.getNameNormalized(name1);\n        const name2Normalized = this.getNameNormalized(name2);\n        if (name1Normalized == name2Normalized) {\n            return true;\n        }\n        return false;\n    }\n\n    populateReaddirCache(entries: ReaddirplusEntry[], name: string): ObjRes {\n        // attempth to add it to the cache\n        const parentFh = this._fh;\n        const res = this._mount.lookup(parentFh, name);\n        const fh = res.obj;\n        let attr = res.attr;\n        if (attr == undefined) {\n            attr = this._mount.getattr(fh);\n        }\n        const fileid = attr.fileid;\n        const cachedEntry: ReaddirplusEntry = {\n            fileid: fileid,\n            fileName: name,\n            attr: attr,\n            handle: fh,\n        };\n        let foundInCache = false;\n        for (const entry of entries) {\n            if (this.isSameNameNormalized(entry.fileName, name)) {\n                entry.fileid = cachedEntry.fileid;\n                entry.attr = cachedEntry.attr;\n                entry.handle = cachedEntry.handle;\n                foundInCache = true;\n            }\n        }\n        if (!foundInCache) {\n            entries.push(cachedEntry);\n        }\n        return res;\n    }\n\n    isReadDirCacheAlive() {\n        const name = this._fullName;\n        const now = Date.now();\n        if (this._readdirplusEntryCache.entries) {\n            const cacheTimeAlive = now - this._readdirplusEntryCache.timestamp;\n            if (cacheTimeAlive <= READDIRPLUS_CACHE_LIFETIME_MS) {\n                nfsDebug(`isReadDirCacheAlive true for ${name}`);\n                return true;\n            }\n        }\n        nfsDebug(`isReadDirCacheAlive false for ${name}`);\n        return false;\n    }\n\n    async getEntryByNameTryLookupFromCache(name: string): Promise<{obj: ObjRes, entry?: ReaddirplusEntryCached}> {\n        const entries = await this.readdirplus();\n        for (const entry of entries) {\n            if (this.isSameNameNormalized(entry.fileName, name)) {\n                const entryHandle = entry.handle;\n                if (entryHandle !== undefined && entryHandle.length > 0) {\n                    const cachedRes: ObjRes = {\n                        obj: entry.handle,\n                        attr: entry.attr,\n                    }\n                    return {obj: cachedRes, entry: entry};\n                } else {\n                    nfsDebug(`getEntryByNameTryLookupFromCache entryHandleLength 0 for ${name}`);\n                }\n            }\n        }\n        const res = this.populateReaddirCache(entries, name);\n        return {obj: res};\n    }\n\n    private async readdirplus(): Promise<ReaddirplusEntryCached[]> {\n        if (!this.isReadDirCacheAlive()) {\n            const now = Date.now();\n            this._readdirplusEntryCache.timestamp = now;\n            this._readdirplusEntryCache.entries = new Promise((resolve, reject) => {\n                try {\n                    let name = this._fullName;\n                    nfsDebug(`calling actual nfs readdirplus for dir ${name}`);\n                    const entries = this._mount.readdirplus(this._fh);\n                    return resolve(entries);\n                } catch (e: any) {\n                    if (\n                        e.payload?.nfsErrorCode === NFS3ERR_NOENT ||\n                        e.payload?.nfsErrorCode === NFS3ERR_NOTDIR ||\n                        e.payload?.nfsErrorCode === NFS3ERR_STALE\n                    ) {\n                        return reject(new NotFoundError());\n                    }\n                    return reject(e);\n                }\n            });\n        }\n        return this._readdirplusEntryCache.entries!;\n    }\n    private async *entryHandles(): AsyncIterableIterator<FileSystemDirectoryHandle | FileSystemFileHandle> {\n        const entries = await this.readdirplus();\n        for (const entry of entries) {\n            if (entry.fileName !== \".\" && entry.fileName !== \"..\") {\n                const fullName = fullNameFromReaddirplusEntry(this._fullName, entry);\n                if (fullName.endsWith(\"/\")) {\n                    let dirHandle = entry.directoryHandle;\n                    if (dirHandle == undefined) {\n                        dirHandle = new NfsDirectoryHandle(\n                            new NfsHandle({parentDir: this}, entry.handle, entry.fileid, \"directory\", fullName, entry.fileName)\n                        );\n                    }\n                    yield dirHandle;\n                } else {\n                    yield new NfsFileHandle(\n                        new NfsHandle({parentDir: this}, entry.handle, entry.fileid, \"file\", fullName, entry.fileName)\n                    );\n                }\n            }\n        }\n    }\n    async *entries(): AsyncIterableIterator<[string, FileSystemDirectoryHandle | FileSystemFileHandle]> {\n        for await (const entry of this.entryHandles()) {\n            yield [entry.name, entry];\n        }\n    }\n    async *keys(): AsyncIterableIterator<string> {\n        for await (const entry of this.entryHandles()) {\n            yield entry.name;\n        }\n    }\n    async *values(): AsyncIterableIterator<FileSystemDirectoryHandle | FileSystemFileHandle> {\n        for await (const entry of this.entryHandles()) {\n            yield entry;\n        }\n    }\n    async requestPermission(perm: NfsHandlePermissionDescriptor): Promise<PermissionState> {\n        return super.requestPermission(perm).then((state) => {\n            this.invalidateReaddirplusCache();\n            return state;\n        });\n    }\n\n    async getDirectoryHandleTryCached(name: string): Promise<FileSystemDirectoryHandle> {\n        const thisHandle = this;\n        return new Promise(async (resolve, reject) => {\n            try {\n                const res = await this.getEntryByNameTryLookupFromCache(name);\n                const obj = res.obj;\n                const fh = obj.obj;\n                const attr = obj.attr || this._mount.getattr(fh);\n                if (attr.attrType !== AttrTypeDirectory) {\n                    return reject(new TypeMismatchError());\n                }\n                let dHandle: NfsDirectoryHandle | undefined;\n                let readDirEntry = res.entry;\n                if (readDirEntry !== undefined) {\n                    dHandle = readDirEntry.directoryHandle;\n                }\n                if (dHandle == undefined) {\n                    dHandle = new NfsDirectoryHandle(\n                        new NfsHandle({parentDir: thisHandle}, fh, attr.fileid, \"directory\", this._fullName + name + \"/\", name)\n                    );\n                    if (readDirEntry) {\n                        // store the directoryHandle in the cache\n                        readDirEntry.directoryHandle = dHandle;\n                    }\n                }\n                return resolve(\n                    dHandle as FileSystemDirectoryHandle\n                );\n            } catch (err: any) {\n                return reject(new NotFoundError());\n            }\n        });\n    }\n\n    async getDirectoryHandle(\n        name: string,\n        options?: FileSystemGetDirectoryOptions\n    ): Promise<FileSystemDirectoryHandle> {\n        const thisHandle = this;\n        return new Promise(async (resolve, reject) => {\n            try {\n                PreNameCheck(name);\n                let handle = await this.getDirectoryHandleTryCached(name);\n                resolve(handle);\n            } catch (e: any) {\n                if (e instanceof TypeError) {\n                    return reject(e);\n                } else if (e instanceof TypeMismatchError) {\n                    return reject(e);\n                }\n                nfsDebug(`getDirectoryHandle name='${name}' error: `, e);\n                // XXX: ignore error\n            }\n\n            if (!options?.create) {\n                return reject(new NotFoundError());\n            }\n\n            try {\n                const mode = 0o775;\n                const res = this._mount.mkdir(this._fh, name, mode);\n                this.invalidateReaddirplusCache();\n                const fh = res.obj;\n                const attr = res.attr || this._mount.getattr(fh);\n                return resolve(\n                    new NfsDirectoryHandle(\n                        new NfsHandle({parentDir: thisHandle}, fh, attr.fileid, \"directory\", this._fullName + name + \"/\", name)\n                    ) as FileSystemDirectoryHandle\n                );\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    \n    async getFileHandle(name: string, options?: FileSystemGetFileOptions): Promise<FileSystemFileHandle> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                PreNameCheck(name);\n                const res = await this.getEntryByNameTryLookupFromCache(name);\n                const obj = res.obj;\n                const fh = obj.obj;\n                const attr = obj.attr || this._mount.getattr(fh);\n                if (attr.attrType === AttrTypeDirectory) {\n                    return reject(new TypeMismatchError());\n                }\n                return resolve(\n                    new NfsFileHandle(\n                        new NfsHandle({parentDir: this}, fh, attr.fileid, \"file\", this._fullName + name, name)\n                    ) as FileSystemFileHandle\n                );\n            } catch (e: any) {\n                if (e instanceof TypeError) {\n                    return reject(e);\n                }\n                // XXX: ignore error\n            }\n\n            if (!options?.create) {\n                return reject(new NotFoundError());\n            }\n\n            try {\n                const mode = 0o664;\n                this._mount.create(this._fh, name, mode); // XXX: ignore returned file handle and obtain one via lookup instead - workaround for go-nfs bug\n                this.invalidateReaddirplusCache();\n                const res = this._mount.lookup(this._fh, name);\n                const fh = res.obj;\n                const attr = res.attr || this._mount.getattr(fh);\n                return resolve(\n                    new NfsFileHandle(\n                        new NfsHandle({parentDir: this}, fh, attr.fileid, \"file\", this._fullName + name, name)\n                    ) as FileSystemFileHandle\n                );\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    async removeEntry(name: string, options?: FileSystemRemoveOptions): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                PreNameCheck(name);\n                const res = this._mount.lookup(this._fh, name);\n                const fh = res.obj;\n                const attr = res.attr || this._mount.getattr(fh);\n                if (attr.attrType === AttrTypeDirectory) {\n                    this.removeDirectory(fh, this._fh, name, !!options?.recursive);\n                } else {\n                    this._mount.remove(this._fh, name);\n                    this.invalidateReaddirplusCache();\n                }\n                return resolve();\n            } catch (e: any) {\n                if (e.payload?.nfsErrorCode === NFS3ERR_NOENT || e.payload?.nfsErrorCode === NFS3ERR_STALE) {\n                    return reject(new NotFoundError());\n                } else if (e.payload?.nfsErrorCode === NFS3ERR_IO || e.payload?.nfsErrorCode === NFS3ERR_NOTEMPTY) {\n                    return reject(new InvalidModificationError());\n                }\n                return reject(e);\n            }\n        });\n    }\n    private removeDirectory(fh: Uint8Array, parent: Uint8Array, name: string, recursive: boolean) {\n        if (recursive) {\n            const entries = this._mount.readdirplus(fh);\n            for (const entry of entries) {\n                if (entry.fileName !== \".\" && entry.fileName !== \"..\") {\n                    if (entry.attr?.attrType === AttrTypeDirectory) {\n                        this.removeDirectory(entry.handle, fh, entry.fileName, recursive);\n                    } else {\n                        this._mount.remove(fh, entry.fileName);\n                        this.invalidateReaddirplusCache();\n                    }\n                }\n            }\n        }\n        this._mount.rmdir(parent, name);\n        this.invalidateReaddirplusCache();\n    }\n    async resolve(possibleDescendant: FileSystemHandle): Promise<Array<string> | null> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const anyPossibleDescendant = possibleDescendant as any;\n                if (anyPossibleDescendant._mount && anyPossibleDescendant._mount !== this._mount) {\n                    return resolve(null); // FIXME: reject instead?\n                }\n\n                const ret = await this.resolveDirectory(this.values(), possibleDescendant);\n                return resolve(ret);\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    private async resolveDirectory(\n        subentries: AsyncIterableIterator<FileSystemDirectoryHandle | FileSystemFileHandle>,\n        possibleDescendant: FileSystemHandle\n    ): Promise<Array<string> | null> {\n        for await (const subentry of subentries) {\n            if (await subentry.isSameEntry(possibleDescendant)) {\n                const ret = subentry.name.substring(1).split(\"/\");\n                ret.pop();\n                return ret;\n            }\n            if (subentry.kind === \"directory\") {\n                const nfsEntry = subentry as NfsDirectoryHandle;\n                const ret = await this.resolveDirectory(nfsEntry.values(), possibleDescendant);\n                if (ret) {\n                    return ret;\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `.keys()`, `.values()`, `.entries()`, or the directory itself as an async iterable in the new API.\n     */\n    getEntries: NfsDirectoryHandle[\"values\"];\n}\n\nexport class NfsFileHandle extends NfsHandle implements FileSystemFileHandle {\n    readonly kind: \"file\";\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isFile: true;\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isDirectory: false;\n    constructor(param: NfsHandle) {\n        const toWrap = param as NfsFileHandle;\n        super({parentDir: toWrap._parent}, toWrap._fh, toWrap._fileid, toWrap.kind, toWrap._fullName, toWrap.name);\n        this.kind = \"file\";\n        this.isFile = true;\n        this.isDirectory = false;\n    }\n    async getFile(): Promise<File> {\n        return new Promise((resolve, reject) => {\n            try {\n                const file = new NfsFile(this._mount, this._fh, this.name) as unknown;\n                return resolve(file as File);\n            } catch (e: any) {\n                if (e.payload?.nfsErrorCode === NFS3ERR_NOENT || e.payload?.nfsErrorCode === NFS3ERR_STALE) {\n                    return reject(new NotFoundError());\n                }\n                return reject(e);\n            }\n        });\n    }\n    async createWritable(options?: FileSystemCreateWritableOptions): Promise<FileSystemWritableFileStream> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const sink = new NfsSink(this._mount, this._fhDir, this._fh, this._fullName, options);\n                return resolve(new NFileSystemWritableFileStream(sink));\n            } catch (e: any) {\n                // XXX: after changing things so as to retain directory file handle, seems we get\n                //      NFS3ERR_ACCES if relevant directory has been deleted (at least from go-nfs)\n                if (e.payload?.nfsErrorCode === NFS3ERR_NOENT || e.payload?.nfsErrorCode === NFS3ERR_ACCES || e.payload?.nfsErrorCode === NFS3ERR_STALE) {\n                    return reject(new NotFoundError());\n                }\n                return reject(e);\n            }\n        });\n    }\n    async createSyncAccessHandle(): Promise<FileSystemSyncAccessHandle> {\n        throw new Error(\"not supported\"); // FIXME: add support?\n    }\n}\n\n// @ts-ignore\nexport class NfsFile implements File {\n    prototype: File;\n    private _mount: NfsMount;\n    private _fh: Uint8Array;\n    lastModified: number;\n    name: string;\n    webkitRelativePath: string;\n    size: number;\n    type: string;\n    constructor(mount: NfsMount, fh: Uint8Array, name: string) {\n        const attr = mount.getattr(fh);\n\n        this.prototype = new File([], name);\n        this._mount = mount;\n        this._fh = fh;\n        this.lastModified = attr.mtime.seconds * 1000 + Math.round(attr.mtime.nseconds / 1_000_000);\n        this.name = name;\n        this.webkitRelativePath = name;\n        this.size = Number(attr.filesize);\n        this.type = \"unknown\";\n    }\n    private uint8Array(start?: number | undefined, end?: number | undefined): Uint8Array {\n        let idx = 0;\n        let pos = start || 0;\n        let size = Math.max((end ? end : this.size) - pos, 0);\n        const buf = new Uint8Array(size);\n        while (size > 0) {\n            const count = Math.min(size, MAX_READ_SIZE);\n            const chunk = this._mount.read(this._fh, BigInt(pos), count);\n            buf.set(chunk, idx);\n            idx += chunk.byteLength;\n            pos += count;\n            size -= count;\n        }\n        return buf;\n    }\n    arrayBuffer(): Promise<ArrayBuffer> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                return resolve(this.uint8Array().buffer);\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    slice(start?: number | undefined, end?: number | undefined, contentType?: string | undefined): Blob {\n        const buf = this.uint8Array(start, end);\n        const blob = new NfsBlob(this._mount, this._fh, buf, contentType) as unknown;\n        return blob as Blob;\n    }\n    stream(): ReadableStream<Uint8Array> {\n        let pos = 0;\n        let size = this.size;\n        const readChunk = (): Uint8Array => {\n            const count = Math.min(size, MAX_READ_SIZE);\n            const chunk = this._mount.read(this._fh, BigInt(pos), count);\n            pos += count;\n            size -= count;\n            return chunk;\n        };\n        return new ReadableStream({\n            type: \"bytes\",\n            pull(controller) {\n                if (size > 0) {\n                    controller.enqueue(readChunk());\n                } else {\n                    controller.close();\n                }\n            },\n        });\n    }\n    text(): Promise<string> {\n        return this.arrayBuffer().then((buf) => {\n            const decoder = new TextDecoder(\"utf-8\");\n            return decoder.decode(buf);\n        });\n    }\n}\n\n// @ts-ignore\nexport class NfsBlob implements Blob {\n    prototype: Blob;\n    private _mount: NfsMount;\n    private _fh: Uint8Array;\n    private _data: Uint8Array;\n    size: number;\n    type: string;\n    constructor(mount: NfsMount, fh: Uint8Array, data: Uint8Array, contentType?: string | undefined) {\n        this.prototype = new Blob();\n        this._mount = mount;\n        this._fh = fh;\n        this._data = data;\n        this.size = data.byteLength;\n        this.type = contentType || \"unknown\";\n    }\n    arrayBuffer(): Promise<ArrayBuffer> {\n        return new Promise(async (resolve) => resolve(this._data));\n    }\n    slice(start?: number | undefined, end?: number | undefined, contentType?: string | undefined): Blob {\n        const blob = new NfsBlob(this._mount, this._fh, this._data.slice(start, end), contentType) as unknown;\n        return blob as Blob;\n    }\n    stream(): ReadableStream<Uint8Array> {\n        let pulled = false;\n        const data = this._data;\n        return new ReadableStream({\n            type: \"bytes\",\n            pull(controller) {\n                if (!pulled) {\n                    controller.enqueue(data);\n                    pulled = true;\n                } else {\n                    controller.close();\n                }\n            },\n        });\n    }\n    text(): Promise<string> {\n        return this.arrayBuffer().then((buf) => {\n            const decoder = new TextDecoder(\"utf-8\");\n            return decoder.decode(buf);\n        });\n    }\n}\n\nexport class NfsSink implements FileSystemWritableFileStream {\n    private _mount: NfsMount;\n    private _fhDir: Uint8Array;\n    private _fh: Uint8Array;\n    private _fhTmp: Uint8Array;\n    private _fileName: string;\n    private _fileNameTmp: string;\n    private _keepExisting: boolean;\n    private _valid: boolean;\n    private _locked: boolean;\n    private _orgSize: number;\n    private _newSize: number;\n    private _position: number;\n    constructor(mount: NfsMount, fhDir: Uint8Array, fh: Uint8Array, fullName: string, options?: FileSystemCreateWritableOptions) {\n        this._fileName = fullName.slice(fullName.lastIndexOf(\"/\") + 1);\n        this._fileNameTmp = \".\" + this._fileName + \"-tmp\" + Date.now();\n        this._mount = mount;\n        this._fhDir = fhDir;\n        this._fh = fh;\n        this._fhTmp = mount.create(this._fhDir, this._fileNameTmp, 0o664).obj;\n        this._keepExisting = !!options?.keepExistingData;\n        this._valid = true;\n        this._locked = false;\n        this._orgSize = Number(mount.getattr(fh).filesize);\n        this._newSize = this._keepExisting ? this._orgSize : 0;\n        this._position = 0;\n    }\n    get locked() {\n        return this._locked;\n    }\n    private copyContents(fhFrom: Uint8Array, fhTo: Uint8Array, size: number) {\n        let pos = 0n;\n        while (size > 0) {\n            const count = Math.min(size, MAX_READ_SIZE);\n            const contents = this._mount.read(fhFrom, pos, count);\n            this._mount.write(fhTo, pos, contents);\n            pos += BigInt(count);\n            size -= count;\n        }\n    }\n    private ensureExistingIfToBeKept() {\n        if (this._keepExisting) {\n            if (this._orgSize > 0) {\n                this.copyContents(this._fh, this._fhTmp, this._orgSize);\n            }\n            this._keepExisting = false;\n        }\n    }\n    async write(data: FileSystemWriteChunkType): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            const anyData = data as any;\n            if (anyData.type === \"seek\") {\n                if (!(\"position\" in anyData) || typeof anyData.position !== \"number\") {\n                    return reject(new SyntaxError(\"seek requires a position argument\"));\n                }\n                await this.seek(anyData.position)\n                    .then(() => resolve())\n                    .catch((e) => reject(e));\n                return;\n            }\n            if (anyData.type === \"truncate\") {\n                if (!(\"size\" in anyData) || typeof anyData.size !== \"number\") {\n                    return reject(new SyntaxError(\"truncate requires a size argument\"));\n                }\n                await this.truncate(anyData.size)\n                    .then(() => resolve())\n                    .catch((e) => reject(e));\n                return;\n            }\n\n            if (anyData.type === \"write\") {\n                if (!(\"data\" in anyData)) {\n                    return reject(new SyntaxError(\"write requires a data argument\"));\n                }\n                if (\"position\" in anyData) {\n                    await this.seek(anyData.position);\n                }\n                data = anyData.data;\n            }\n\n            let buffer: ArrayBuffer;\n            if (data instanceof ArrayBuffer) {\n                buffer = data;\n            } else if (ArrayBuffer.isView(data)) {\n                buffer = data as any;\n            } else if (data instanceof DataView) {\n                buffer = data.buffer;\n            } else if (data instanceof Blob) {\n                buffer = await data.arrayBuffer();\n            } else if (data instanceof String) {\n                const encoder = new TextEncoder();\n                buffer = encoder.encode(data.toString());\n            } else {\n                const encoder = new TextEncoder();\n                buffer = encoder.encode(data as string);\n            }\n\n            try {\n                this.ensureExistingIfToBeKept();\n                this._mount.write(this._fhTmp, BigInt(this._position), new Uint8Array(buffer));\n                this._position += buffer.byteLength;\n                if (this._position > this._newSize) {\n                    this._newSize = this._position;\n                }\n                return resolve();\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    async seek(position: number): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            this._position = position;\n            return resolve();\n        });\n    }\n    async truncate(size: number): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            try {\n                this.ensureExistingIfToBeKept();\n                this._mount.setattr(this._fhTmp, undefined, undefined, undefined, undefined, BigInt(size), undefined, undefined);\n                if (this._position > size) {\n                    this._position = size;\n                }\n                this._newSize = size;\n                return resolve();\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    async close(): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            try {\n                if (!this._keepExisting) {\n                    // XXX: if this._keepExisting is still set, no writes or truncates have occurred\n                    this._mount.rename(this._fhDir, this._fileNameTmp, this._fhDir, this._fileName);\n                } else {\n                    this._mount.remove(this._fhDir, this._fileNameTmp);\n                }\n                this._valid = false;\n                return resolve();\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    async abort(_reason: string): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            try {\n                this._mount.remove(this._fhDir, this._fileNameTmp);\n                this._valid = false;\n                return resolve();\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    getWriter(): WritableStreamDefaultWriter {\n        if (!this._valid) {\n            throw new TypeError(\"invalid stream\");\n        }\n        if (this.locked) {\n            throw new Error(\"Invalid state: WritableStream is locked\");\n        }\n\n        const fileStream = this;\n        const stream = new WritableStream({\n            abort(reason) {\n                return fileStream.abort(reason);\n            },\n            close() {\n                return fileStream.close();\n            },\n            write(chunk, _controller) {\n                return fileStream.write(chunk);\n            },\n        });\n        const writer = new WritableStreamDefaultWriter(stream);\n        const anyWriter = writer as any;\n        fileStream._locked = true;\n        anyWriter._releaseLock = writer.releaseLock;\n        anyWriter.releaseLock = () => {\n            anyWriter._releaseLock();\n            fileStream._locked = false;\n        };\n        return writer;\n    }\n}\n\nexport async function nfs(path: string): Promise<NfsDirectoryHandle> {\n    await ensureInstantiation();\n    return new NfsDirectoryHandle(path);\n}\nexport default nfs;\n"]}