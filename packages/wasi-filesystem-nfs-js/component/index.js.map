{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Datetime, Descriptor, DescriptorFlags, OpenFlags, PathFlags } from \"./interfaces/wasi-filesystem-types.js\";\nimport { Root, instantiate } from \"./wasi_filesystem.js\";\nimport { WASIWorker } from \"@wasmin/wasi-js\";\nimport {\n    NFileSystemWritableFileStream,\n    PreNameCheck,\n    InvalidModificationError,\n    NotFoundError,\n    SyntaxError,\n    TypeMismatchError,\n    Stat,\n} from \"@wasmin/fs-js\";\nimport process from \"node:process\";\n\n// XXX: elsewhere reads are getting sliced into 4k chunks but 32k chunks seem to work fine (and faster)\n//      have tried larger chunks (e.g. 64k) which seem to still work but are only marginally faster so...\nlet MAX_READ_SIZE = 32768;\nif (process !== undefined) {\n    if (process.env !== undefined) {\n        let max_read = process.env.WASMIN_MAX_NFS_READ_SIZE\n        if (max_read){\n            MAX_READ_SIZE = Number(max_read);\n        }\n    }\n}\n\nconst isNode = typeof process !== \"undefined\" && process.versions && process.versions.node;\nlet _fs: any;\nasync function fetchCompile(url: URL) {\n    if (url.protocol === \"compiled:\" || url.pathname.startsWith(\"/$bunfs/root/\")) {\n        const filePaths = url.pathname.split(\"/\");\n        const fileName = filePaths[filePaths.length-1];\n        url = new URL(fileName, \"file:///tmp/wasmin-tmp/\");\n    }\n    if (isNode) {\n        _fs = _fs || (await import(\"node:fs/promises\"));\n        return WebAssembly.compile(await _fs.readFile(url));\n    }\n    return fetch(url).then(WebAssembly.compileStreaming);\n}\n\nasync function compileCore(url: string) {\n    if (url == \"wasi_filesystem.core.wasm\") {\n        const metaUrl = new URL(\"./wasi_filesystem.core.wasm\", import.meta.url);\n        return await fetchCompile(metaUrl);\n    } else if (url == \"wasi_filesystem.core2.wasm\") {\n        const metaUrl = new URL(\"./wasi_filesystem.core2.wasm\", import.meta.url);\n        return await fetchCompile(metaUrl);\n    } else if (url == \"wasi_filesystem.core3.wasm\") {\n        const metaUrl = new URL(\"./wasi_filesystem.core3.wasm\", import.meta.url);\n        return await fetchCompile(metaUrl);\n    } else if (url == \"wasi_filesystem.core4.wasm\") {\n        const metaUrl = new URL(\"./wasi_filesystem.core4.wasm\", import.meta.url);\n        return await fetchCompile(metaUrl);\n    } else {\n        throw new Error(`unsupported wasm URL: ${url}`);\n    }\n}\n\nconst wasiWorkers: Record<string, WASIWorker> = {};\nconst wasmInstances: Record<string, Root> = {};\nconst instantiations: Record<string, Promise<WASIWorker>> = {};\n\nasync function ensureInstantiation(path: string) {\n    if (!instantiations[path]) {\n        instantiations[path] = new Promise(async (resolve, reject) => {\n            wasiWorkers[path] = new WASIWorker({env: {NFS_URL_FOR_WASI_FILESYSTEM: path}});\n            await wasiWorkers[path]\n                .createWorker()\n                .then((componentImports) => instantiate(compileCore, componentImports as any))\n                .then((instance) => (wasmInstances[path] = instance))\n                .catch((e) => reject(e));\n            resolve(wasiWorkers[path]);\n        });\n    }\n    await instantiations[path];\n}\n\nexport interface WasiNfsHandlePermissionDescriptor {\n    mode: \"read\" | \"readwrite\";\n}\n\nexport class WasiNfsHandle implements FileSystemHandle {\n    protected _parent: Descriptor;\n    protected _descriptor: Descriptor;\n    protected _fullName: string;\n    readonly kind: FileSystemHandleKind;\n    readonly name: string;\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isFile: boolean;\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isDirectory: boolean;\n    constructor(parent: Descriptor, descriptor: Descriptor, kind: FileSystemHandleKind, fullName: string, name: string) {\n        this._parent = parent;\n        this._descriptor = descriptor;\n        this._fullName = fullName;\n        this.kind = kind;\n        this.name = name;\n        this.isFile = kind == \"file\";\n        this.isDirectory = kind == \"directory\";\n    }\n    isSameEntry(other: FileSystemHandle): Promise<boolean> {\n        return new Promise(async (resolve) => {\n            const anyOther = other as any;\n            if (anyOther._descriptor) {\n                resolve(this._descriptor.isSameObject(anyOther._descriptor));\n            } else {\n                resolve(\n                    other.kind === this.kind &&\n                    other.name === this.name &&\n                    (!anyOther._fullName || anyOther._fullName === this._fullName)\n                );\n            }\n        });\n    }\n    async queryPermission(perm?: WasiNfsHandlePermissionDescriptor): Promise<PermissionState> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const flags = this._descriptor.getFlags();\n                if (!flags.read || (perm?.mode === \"readwrite\" && !flags.write)) {\n                    resolve(\"denied\");\n                } else {\n                    resolve(\"granted\");\n                }\n            } catch (_e: any) {\n                // reject(_e);\n                reject(\"access denied\"); // TODO: verify\n            }\n        });\n    }\n    async requestPermission(perm: WasiNfsHandlePermissionDescriptor): Promise<PermissionState> {\n        return this.queryPermission(perm); // TODO: verify that there's nothing we can do to implement requestPermission\n    }\n}\n\nexport class WasiNfsDirectoryHandle extends WasiNfsHandle implements FileSystemDirectoryHandle {\n    [Symbol.asyncIterator]: WasiNfsDirectoryHandle[\"entries\"] = this.entries;\n    readonly kind: \"directory\";\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isFile: false;\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isDirectory: true;\n    constructor(url: string);\n    constructor(toWrap: WasiNfsHandle);\n    constructor(param: string | WasiNfsHandle) {\n        let parent: Descriptor;\n        let descriptor: Descriptor;\n        let kind: FileSystemHandleKind;\n        let fullName: string;\n        let name: string;\n        if (typeof param === \"string\") {\n            const url = param as string;\n            const wasmInstance = wasmInstances[url];\n            const dirs = wasmInstance[\"wasi:filesystem/preopens@0.2.0\"].getDirectories();\n            if (dirs.length !== 1 || dirs[0][1] !== \"/\") {\n                console.log(`wasi:filesystem/preopens/get-directories returned unexpected ${dirs}`);\n                throw new Error(\"internal error\"); // FIXME: improve error message?\n            }\n            parent = dirs[0][0];\n            descriptor = dirs[0][0];\n            fullName = dirs[0][1];\n            kind = \"directory\";\n            name = \"\";\n        } else {\n            const toWrap = param as WasiNfsDirectoryHandle;\n            parent = toWrap._parent;\n            descriptor = toWrap._descriptor;\n            kind = toWrap.kind;\n            fullName = toWrap._fullName;\n            name = toWrap.name;\n        }\n        super(parent, descriptor, kind, fullName, name);\n        this[Symbol.asyncIterator] = this.entries;\n        this.kind = \"directory\";\n        this.isFile = false;\n        this.isDirectory = true;\n        this.getEntries = this.values;\n    }\n    async stat(): Promise<Stat> {\n        const attr = this._descriptor.stat();\n        const dataModificationTimestamp = attr.dataModificationTimestamp ?? { seconds: 0n, nanoseconds: 0 };\n        const dataAccessTimestamp = attr.dataAccessTimestamp ?? { seconds: 0n, nanoseconds: 0 };\n        const mtime = dataModificationTimestamp.seconds * 1_000_000_000n + BigInt(dataModificationTimestamp.nanoseconds);\n        const atime = dataAccessTimestamp.seconds * 1_000_000_000n + BigInt(dataAccessTimestamp.nanoseconds);\n        const stats: Stat = {\n            inode: undefined, // FIXME: inode from stat (can we even do anything about this? wasi:filesystem doesn't seem to export inode or equivalent...)\n            size: attr.size,\n            creationTime: mtime,\n            modifiedTime: mtime,\n            accessedTime: atime,\n        };\n        return stats;\n    }\n    private async *entryHandles(): AsyncIterableIterator<FileSystemDirectoryHandle | FileSystemFileHandle> {\n        try {\n            const pathFlags: PathFlags = {};\n            const openFlags: OpenFlags = {};\n            const openDirFlags: OpenFlags = {directory: true};\n            const descriptorFlags: DescriptorFlags = {read: true, write: true, mutateDirectory: true}; // TODO: verify w.r.t. access\n            const dirStream = this._descriptor.readDirectory();\n            for (let entry = dirStream.readDirectoryEntry(); entry; entry = dirStream.readDirectoryEntry()) {\n                const stat = this._descriptor.statAt(pathFlags, entry.name);\n                if (stat.type == \"directory\") {\n                    const descriptor = this._descriptor.openAt(pathFlags, entry.name, openDirFlags, descriptorFlags);\n                    yield new WasiNfsDirectoryHandle(\n                        new WasiNfsHandle(this._descriptor, descriptor, \"directory\", this._fullName + entry.name + \"/\", entry.name)\n                    );\n                } else {\n                    const descriptor = this._descriptor.openAt(pathFlags, entry.name, openFlags, descriptorFlags);\n                    yield new WasiNfsFileHandle(\n                        new WasiNfsHandle(this._descriptor, descriptor, \"file\", this._fullName + entry.name, entry.name)\n                    );\n                }\n            }\n        } catch (e: any) {\n            if (e.message === \"bad-descriptor\" || e.message === \"not-directory\" || e.message === \"no-entry\") {\n                throw new NotFoundError();\n            }\n            throw e;\n        }\n    }\n    async *entries(): AsyncIterableIterator<[string, FileSystemDirectoryHandle | FileSystemFileHandle]> {\n        for await (const entry of this.entryHandles()) {\n            yield [entry.name, entry];\n        }\n    }\n    async *keys(): AsyncIterableIterator<string> {\n        for await (const entry of this.entryHandles()) {\n            yield entry.name;\n        }\n    }\n    async *values(): AsyncIterableIterator<FileSystemDirectoryHandle | FileSystemFileHandle> {\n        for await (const entry of this.entryHandles()) {\n            yield entry;\n        }\n    }\n    async getDirectoryHandle(\n        name: string,\n        options?: FileSystemGetDirectoryOptions\n    ): Promise<FileSystemDirectoryHandle> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                PreNameCheck(name);\n                const pathFlags: PathFlags = {}; // TODO: verify\n                const openFlags: OpenFlags = {create: options?.create, directory: true, exclusive: false}; // TODO: verify\n                const descriptorFlags: DescriptorFlags = {read: true, write: true, mutateDirectory: true}; // TODO: verify\n                const descriptor = this._descriptor.openAt(pathFlags, name, openFlags, descriptorFlags);\n                return resolve(\n                    new WasiNfsDirectoryHandle(\n                        new WasiNfsHandle(this._descriptor, descriptor, \"directory\", this._fullName + name + \"/\", name)\n                    ) as FileSystemDirectoryHandle\n                );\n            } catch (e: any) {\n                if (e.message === \"no-entry\") {\n                    return reject(new NotFoundError())\n                }\n                if (e.message === \"not-directory\") {\n                    return reject(new TypeMismatchError());\n                }\n                return reject(e);\n            }\n\n            // TODO: verify that Descriptor.openAt should create directory when flags indicate as such\n            //        if not, change above catch-block to ignore error (except on TypeError?) and uncomment below\n            //        if Descriptor.openAt should create directory when flags indicate as such, remove this comment and below\n            // if (!options?.create) {\n            //     return reject(new NotFoundError());\n            // }\n\n            // try {\n            //     const pathFlags: PathFlags = {}; // TODO: verify\n            //     const openFlags: OpenFlags = {directory: true}; // TODO: verify\n            //     const descriptorFlags: DescriptorFlags = {read: true, write: true, mutateDirectory: true}; // TODO: verify\n            //     this._descriptor.createDirectoryAt(name);\n            //     const dir = this._descriptor.openAt(pathFlags, name, openFlags, descriptorFlags);\n            //     return resolve(\n            //         new WasiNfsDirectoryHandle(\n            //             new WasiNfsHandle(dir, \"directory\", this._fullName + name + \"/\", name)\n            //         ) as FileSystemDirectoryHandle\n            //     );\n            // } catch (e: any) {\n            //     return reject(e);\n            // }\n        });\n    }\n    async getFileHandle(name: string, options?: FileSystemGetFileOptions): Promise<FileSystemFileHandle> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                PreNameCheck(name);\n                const pathFlags: PathFlags = {}; // TODO: verify\n                const openFlags: OpenFlags = {create: options?.create, directory: false, exclusive: false}; // TODO: verify\n                const descriptorFlags: DescriptorFlags = {read: true, write: true, mutateDirectory: true}; // TODO: verify\n                const descriptor = this._descriptor.openAt(pathFlags, name, openFlags, descriptorFlags);\n                return resolve(\n                    new WasiNfsFileHandle(\n                        new WasiNfsHandle(this._descriptor, descriptor, \"file\", this._fullName + name, name)\n                    ) as FileSystemFileHandle\n                );\n            } catch (e: any) {\n                if (e.message === \"no-entry\") {\n                    return reject(new NotFoundError())\n                }\n                if (e.message === \"is-directory\") {\n                    return reject(new TypeMismatchError());\n                }\n                return reject(e);\n            }\n        });\n    }\n    async removeEntry(name: string, options?: FileSystemRemoveOptions): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                PreNameCheck(name);\n                const pathFlags = {}; // TODO: verify\n                const stat = this._descriptor.statAt(pathFlags, name);\n                if (stat.type === \"directory\") {\n                    WasiNfsDirectoryHandle.removeDirectory(this._descriptor, name, !!options?.recursive);\n                } else {\n                    this._descriptor.unlinkFileAt(name);\n                }\n                return resolve();\n            } catch (e: any) {\n                if (e.message === \"bad-descriptor\" || e.message === \"no-entry\") {\n                    return reject(new NotFoundError());\n                }\n                if (e.message === \"not-empty\" || e.message === \"io\") {\n                    return reject(new InvalidModificationError());\n                }\n                // TODO: verify that error type is NotFoundError on not-found-error and InvalidModificationError on dir-not-empty error (and I/O error?)\n                // if (e.payload?.nfsErrorCode === NFS3ERR_NOENT || e.payload?.nfsErrorCode === NFS3ERR_STALE) {\n                //     return reject(new NotFoundError());\n                // } else if (e.payload?.nfsErrorCode === NFS3ERR_IO || e.payload?.nfsErrorCode === NFS3ERR_NOTEMPTY) {\n                //     return reject(new InvalidModificationError());\n                // }\n                return reject(e);\n            }\n        });\n    }\n    private static removeDirectory(parentDir: Descriptor, name: string, recursive: boolean) {\n        if (recursive) {\n            const pathFlags: PathFlags = {}; // TODO: verify\n            const openFlags: OpenFlags = {create: false, directory: true}; // TODO: verify\n            const descriptorFlags: DescriptorFlags = {read: true, write: true, mutateDirectory: true}; // TODO: verify\n            const dir = parentDir.openAt(pathFlags, name, openFlags, descriptorFlags);\n            const dirStream = dir.readDirectory();\n            for (let entry = dirStream.readDirectoryEntry(); entry; entry = dirStream.readDirectoryEntry()) {\n                if (entry.name !== \".\" && entry.name !== \"..\") {\n                    if (entry.type === \"directory\") {\n                        WasiNfsDirectoryHandle.removeDirectory(dir, entry.name, recursive);\n                    } else {\n                        dir.unlinkFileAt(entry.name);\n                    }\n                }\n            }\n        }\n        parentDir.removeDirectoryAt(name);\n    }\n    async resolve(possibleDescendant: FileSystemHandle): Promise<Array<string> | null> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const anyPossibleDescendant = possibleDescendant as any;\n                if (anyPossibleDescendant._descriptor && anyPossibleDescendant._descriptor !== this._descriptor) {\n                    return resolve(null); // FIXME: reject instead?\n                }\n\n                const ret = await this.resolveDirectory(this.values(), possibleDescendant);\n                return resolve(ret);\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    private async resolveDirectory(\n        subentries: AsyncIterableIterator<FileSystemDirectoryHandle | FileSystemFileHandle>,\n        possibleDescendant: FileSystemHandle\n    ): Promise<Array<string> | null> {\n        for await (const subentry of subentries) {\n            if (await subentry.isSameEntry(possibleDescendant)) {\n                const ret = subentry.name.substring(1).split(\"/\");\n                ret.pop();\n                return ret;\n            }\n            if (subentry.kind === \"directory\") {\n                const nfsEntry = subentry as WasiNfsDirectoryHandle;\n                const ret = await this.resolveDirectory(nfsEntry.values(), possibleDescendant);\n                if (ret) {\n                    return ret;\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `.keys()`, `.values()`, `.entries()`, or the directory itself as an async iterable in the new API.\n     */\n    getEntries: WasiNfsDirectoryHandle[\"values\"];\n}\n\nexport class WasiNfsFileHandle extends WasiNfsHandle implements FileSystemFileHandle {\n    readonly kind: \"file\";\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isFile: true;\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isDirectory: false;\n    constructor(param: WasiNfsHandle) {\n        const toWrap = param as WasiNfsFileHandle;\n        super(toWrap._parent, toWrap._descriptor, toWrap.kind, toWrap._fullName, toWrap.name);\n        this.kind = \"file\";\n        this.isFile = true;\n        this.isDirectory = false;\n    }\n    async getFile(): Promise<File> {\n        return new Promise((resolve, reject) => {\n            try {\n                const file = new WasiNfsFile(this._descriptor, this.name) as unknown;\n                return resolve(file as File);\n            } catch (e: any) {\n                if (e.message === \"bad-descriptor\" || e.message === \"no-entry\") {\n                    return reject(new NotFoundError());\n                }\n                return reject(e);\n            }\n        });\n    }\n    async createWritable(options?: FileSystemCreateWritableOptions): Promise<FileSystemWritableFileStream> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const sink = new WasiNfsSink(this._parent, this._descriptor, this._fullName, options);\n                return resolve(new NFileSystemWritableFileStream(sink));\n            } catch (e: any) {\n                if (e.message === \"bad-descriptor\" || e.message === \"no-entry\") {\n                    return reject(new NotFoundError());\n                }\n                return reject(e);\n            }\n        });\n    }\n    async createSyncAccessHandle(): Promise<FileSystemSyncAccessHandle> {\n        throw new Error(\"not supported\"); // FIXME: add support?\n    }\n}\n\n// @ts-ignore\nexport class WasiNfsFile implements File {\n    prototype: File;\n    private _descriptor: Descriptor;\n    lastModified: number;\n    name: string;\n    webkitRelativePath: string;\n    size: number;\n    type: string;\n    constructor(descriptor: Descriptor, name: string) {\n        const stat = descriptor.stat();\n        const dataModificationTimestamp: Datetime = stat.dataModificationTimestamp ?? {seconds: 0n, nanoseconds: 0};\n\n        this.prototype = new File([], name);\n        this._descriptor = descriptor;\n        this.lastModified = Number(dataModificationTimestamp.seconds) * 1000 + Math.round(dataModificationTimestamp.nanoseconds / 1_000_000);\n        this.name = name;\n        this.webkitRelativePath = name;\n        this.size = Number(stat.size);\n        this.type = \"unknown\";\n    }\n    private uint8Array(start?: number | undefined, end?: number | undefined): Uint8Array {\n        let idx = 0;\n        let pos = start || 0;\n        let size = Math.max((end ? end : this.size) - pos, 0);\n        const buf = new Uint8Array(size);\n        while (size > 0) {\n            const count = Math.min(size, MAX_READ_SIZE);\n            const chunk = this._descriptor.read(BigInt(count), BigInt(pos));\n            buf.set(chunk[0], idx);\n            idx += chunk[0].byteLength;\n            // FIXME: what if chunk[1] is true? (i.e. Descriptor.read return indicates EOF)\n            pos += count;\n            size -= count;\n        }\n        return buf;\n    }\n    arrayBuffer(): Promise<ArrayBuffer> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                return resolve(this.uint8Array().buffer);\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    slice(start?: number | undefined, end?: number | undefined, contentType?: string | undefined): Blob {\n        const buf = this.uint8Array(start, end);\n        const blob = new WasiNfsBlob(this._descriptor, buf, contentType) as unknown;\n        return blob as Blob;\n    }\n    stream(): ReadableStream<Uint8Array> {\n        let pos = 0;\n        let size = this.size;\n        const readChunk = (): Uint8Array => {\n            const count = Math.min(size, MAX_READ_SIZE);\n            const chunk = this._descriptor.read(BigInt(count), BigInt(pos));\n            pos += count;\n            size -= count;\n            return chunk[0];\n        };\n        return new ReadableStream({\n            type: \"bytes\",\n            pull(controller) {\n                if (size > 0) {\n                    controller.enqueue(readChunk());\n                } else {\n                    controller.close();\n                }\n            },\n        });\n    }\n    text(): Promise<string> {\n        return this.arrayBuffer().then((buf) => {\n            const decoder = new TextDecoder(\"utf-8\");\n            return decoder.decode(buf);\n        });\n    }\n}\n\n// @ts-ignore\nexport class WasiNfsBlob implements Blob {\n    prototype: Blob;\n    private _descriptor: Descriptor;\n    private _data: Uint8Array;\n    size: number;\n    type: string;\n    constructor(descriptor: Descriptor, data: Uint8Array, contentType?: string | undefined) {\n        this.prototype = new Blob();\n        this._descriptor = descriptor;\n        this._data = data;\n        this.size = data.byteLength;\n        this.type = contentType || \"unknown\";\n    }\n    arrayBuffer(): Promise<ArrayBuffer> {\n        return new Promise(async (resolve) => resolve(this._data));\n    }\n    slice(start?: number | undefined, end?: number | undefined, contentType?: string | undefined): Blob {\n        const blob = new WasiNfsBlob(this._descriptor, this._data.slice(start, end), contentType) as unknown;\n        return blob as Blob;\n    }\n    stream(): ReadableStream<Uint8Array> {\n        let pulled = false;\n        const data = this._data;\n        return new ReadableStream({\n            type: \"bytes\",\n            pull(controller) {\n                if (!pulled) {\n                    controller.enqueue(data);\n                    pulled = true;\n                } else {\n                    controller.close();\n                }\n            },\n        });\n    }\n    text(): Promise<string> {\n        return this.arrayBuffer().then((buf) => {\n            const decoder = new TextDecoder(\"utf-8\");\n            return decoder.decode(buf);\n        });\n    }\n}\n\nexport class WasiNfsSink implements FileSystemWritableFileStream {\n    private _parent: Descriptor;\n    private _descriptor: Descriptor;\n    private _descriptorTmp: Descriptor;\n    private _fileName: string;\n    private _fileNameTmp: string;\n    private _keepExisting: boolean;\n    private _valid: boolean;\n    private _locked: boolean;\n    private _orgSize: number;\n    private _newSize: number;\n    private _position: number;\n    constructor(parent: Descriptor, descriptor: Descriptor, fullName: string, options?: FileSystemCreateWritableOptions) {\n        const pathFlags: PathFlags = {}; // TODO: verify\n        const openFlags: OpenFlags = {create: true, directory: false, exclusive: true}; // TODO: verify\n        const descriptorFlags: DescriptorFlags = {read: true, write: true, mutateDirectory: true}; // TODO: verify\n\n        this._fileName = fullName.slice(fullName.lastIndexOf(\"/\") + 1);\n        this._fileNameTmp = \".\" + this._fileName + \"-tmp\" + Date.now();\n        this._parent = parent;\n        this._descriptor = descriptor;\n        this._descriptorTmp = parent.openAt(pathFlags, this._fileNameTmp, openFlags, descriptorFlags);\n        this._keepExisting = !!options?.keepExistingData;\n        this._valid = true;\n        this._locked = false;\n        this._orgSize = Number(descriptor.stat().size);\n        this._newSize = this._keepExisting ? this._orgSize : 0;\n        this._position = 0;\n    }\n    get locked() {\n        return this._locked;\n    }\n    private static copyContents(descriptorFrom: Descriptor, descriptorTo: Descriptor, size: number) {\n        let pos = 0n;\n        while (size > 0) {\n            const count = Math.min(size, MAX_READ_SIZE);\n            const contents = descriptorFrom.read(BigInt(count), pos);\n            descriptorTo.write(contents[0], pos);\n            // FIXME: what if contents[1] is true? (i.e. Descriptor.read return indicates EOF)\n            pos += BigInt(count);\n            size -= count;\n        }\n    }\n    private ensureExistingIfToBeKept() {\n        if (this._keepExisting) {\n            if (this._orgSize > 0) {\n                WasiNfsSink.copyContents(this._descriptor, this._descriptorTmp, this._orgSize);\n            }\n            this._keepExisting = false;\n        }\n    }\n    async write(data: FileSystemWriteChunkType): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            const anyData = data as any;\n            if (anyData.type === \"seek\") {\n                if (!(\"position\" in anyData) || typeof anyData.position !== \"number\") {\n                    return reject(new SyntaxError(\"seek requires a position argument\"));\n                }\n                await this.seek(anyData.position)\n                    .then(() => resolve())\n                    .catch((e) => reject(e));\n                return;\n            }\n            if (anyData.type === \"truncate\") {\n                if (!(\"size\" in anyData) || typeof anyData.size !== \"number\") {\n                    return reject(new SyntaxError(\"truncate requires a size argument\"));\n                }\n                await this.truncate(anyData.size)\n                    .then(() => resolve())\n                    .catch((e) => reject(e));\n                return;\n            }\n\n            if (anyData.type === \"write\") {\n                if (!(\"data\" in anyData)) {\n                    return reject(new SyntaxError(\"write requires a data argument\"));\n                }\n                if (\"position\" in anyData) {\n                    await this.seek(anyData.position);\n                }\n                data = anyData.data;\n            }\n\n            let buffer: ArrayBuffer;\n            if (data instanceof ArrayBuffer) {\n                buffer = data;\n            } else if (ArrayBuffer.isView(data)) {\n                buffer = data as any;\n            } else if (data instanceof DataView) {\n                buffer = data.buffer;\n            } else if (data instanceof Blob) {\n                buffer = await data.arrayBuffer();\n            } else if (data instanceof String) {\n                const encoder = new TextEncoder();\n                buffer = encoder.encode(data.toString());\n            } else {\n                const encoder = new TextEncoder();\n                buffer = encoder.encode(data as string);\n            }\n\n            try {\n                this.ensureExistingIfToBeKept();\n                this._descriptorTmp.write(new Uint8Array(buffer), BigInt(this._position));\n                this._position += buffer.byteLength;\n                if (this._position > this._newSize) {\n                    this._newSize = this._position;\n                }\n                return resolve();\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    async seek(position: number): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            this._position = position;\n            return resolve();\n        });\n    }\n    async truncate(size: number): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            try {\n                this.ensureExistingIfToBeKept();\n                this._descriptorTmp.setSize(BigInt(size));\n                if (this._position > size) {\n                    this._position = size;\n                }\n                this._newSize = size;\n                return resolve();\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    async close(): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            try {\n                if (!this._keepExisting) {\n                    // XXX: if this._keepExisting is still set, no writes or truncates have occurred\n                    this._parent.renameAt(this._fileNameTmp, this._parent, this._fileName);\n                } else {\n                    this._parent.unlinkFileAt(this._fileNameTmp);\n                }\n                this._valid = false;\n                return resolve();\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    async abort(_reason: string): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            try {\n                this._parent.unlinkFileAt(this._fileNameTmp);\n                this._valid = false;\n                return resolve();\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    getWriter(): WritableStreamDefaultWriter {\n        if (!this._valid) {\n            throw new TypeError(\"invalid stream\");\n        }\n        if (this.locked) {\n            throw new Error(\"Invalid state: WritableStream is locked\");\n        }\n\n        const fileStream = this;\n        const stream = new WritableStream({\n            abort(reason) {\n                return fileStream.abort(reason);\n            },\n            close() {\n                return fileStream.close();\n            },\n            write(chunk, _controller) {\n                return fileStream.write(chunk);\n            },\n        });\n        const writer = new WritableStreamDefaultWriter(stream);\n        const anyWriter = writer as any;\n        fileStream._locked = true;\n        anyWriter._releaseLock = writer.releaseLock;\n        anyWriter.releaseLock = () => {\n            anyWriter._releaseLock();\n            fileStream._locked = false;\n        };\n        return writer;\n    }\n}\n\nexport async function wasiFilesystemNfs(path: string): Promise<WasiNfsDirectoryHandle> {\n    await ensureInstantiation(path);\n    return new WasiNfsDirectoryHandle(path);\n}\nexport default wasiFilesystemNfs;\n"]}