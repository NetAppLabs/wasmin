{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Mount, ComponentNfsRsNfs, ReaddirplusEntry } from \"./exports/component-nfs-rs-nfs\";\nimport { instantiate } from \"./nfs_rs.js\";\nimport { WASIWorker } from \"@wasm-env/wasi-js\";\nimport {\n    NFileSystemWritableFileStream,\n    PreNameCheck,\n    InvalidModificationError,\n    NotFoundError,\n    SyntaxError,\n    TypeMismatchError,\n} from \"@wasm-env/fs-js\";\n\nconst ACCESS3_READ = 0x0001;\nconst ACCESS3_LOOKUP = 0x0002;\nconst ACCESS3_MODIFY = 0x0004;\nconst ACCESS3_EXTEND = 0x0008;\nconst ACCESS3_DELETE = 0x0010;\nconst ACCESS3_EXECUTE = 0x0020;\n\nconst NFS3_OK = 0;\nconst NFS3ERR_PERM = 1;\nconst NFS3ERR_NOENT = 2;\nconst NFS3ERR_IO = 5;\nconst NFS3ERR_NXIO = 6;\nconst NFS3ERR_ACCES = 13;\nconst NFS3ERR_EXIST = 17;\nconst NFS3ERR_XDEV = 18;\nconst NFS3ERR_NODEV = 19;\nconst NFS3ERR_NOTDIR = 20;\nconst NFS3ERR_ISDIR = 21;\nconst NFS3ERR_INVAL = 22;\nconst NFS3ERR_FBIG = 27;\nconst NFS3ERR_NOSPC = 28;\nconst NFS3ERR_ROFS = 30;\nconst NFS3ERR_MLINK = 31;\nconst NFS3ERR_NAMETOOLONG = 63;\nconst NFS3ERR_NOTEMPTY = 66;\nconst NFS3ERR_DQUOT = 69;\nconst NFS3ERR_STALE = 70;\nconst NFS3ERR_REMOTE = 71;\nconst NFS3ERR_BADHANDLE = 10001;\nconst NFS3ERR_NOT_SYNC = 10002;\nconst NFS3ERR_BAD_COOKIE = 10003;\nconst NFS3ERR_NOTSUPP = 10004;\nconst NFS3ERR_TOOSMALL = 10005;\nconst NFS3ERR_SERVERFAULT = 10006;\nconst NFS3ERR_BADTYPE = 10007;\nconst NFS3ERR_JUKEBOX = 10008;\n\nconst AttrTypeDirectory = 2;\nconst AccessRead = ACCESS3_READ | ACCESS3_LOOKUP | ACCESS3_EXECUTE;\nconst AccessReadWrite = AccessRead | ACCESS3_MODIFY | ACCESS3_EXTEND | ACCESS3_DELETE;\n\n// XXX: elsewhere reads are getting sliced into 4k chunks but 32k chunks seem to work fine (and faster)\n//      have tried larger chunks (e.g. 64k) which seem to still work but are only marginally faster so...\nconst MAX_READ_SIZE = process.env.WASM_ENV_MAX_NFS_READ_SIZE && Number(process.env.WASM_ENV_MAX_NFS_READ_SIZE) || 32768;\n\nfunction fullNameFromReaddirplusEntry(parentName: string, entry: ReaddirplusEntry): string {\n    const suffix = entry.attr?.attrType === AttrTypeDirectory ? \"/\" : \"\";\n    return parentName + entry.fileName + suffix;\n}\n\nconst isNode = typeof process !== \"undefined\" && process.versions && process.versions.node;\nlet _fs: any;\nasync function fetchCompile(url: URL) {\n    if (isNode) {\n        _fs = _fs || (await import(\"fs/promises\"));\n        return WebAssembly.compile(await _fs.readFile(url));\n    }\n    return fetch(url).then(WebAssembly.compileStreaming);\n}\n\nasync function compileCore(url: string) {\n    url = \"./\" + url;\n    return await fetchCompile(new URL(url, import.meta.url));\n}\n\nvar nfsComponent: typeof ComponentNfsRsNfs;\nconst wasi = new WASIWorker({});\nawait wasi\n    .createWorker()\n    .then((componentImports) => instantiate(compileCore, componentImports as any))\n    .then((instance) => (nfsComponent = instance.nfs));\n\nexport interface NfsHandlePermissionDescriptor {\n    mode: \"read\" | \"readwrite\";\n}\n\nexport class NfsHandle implements FileSystemHandle {\n    protected _mount: Mount;\n    protected _fhDir: Uint8Array;\n    protected _fh: Uint8Array;\n    protected _fullName: string;\n    readonly kind: FileSystemHandleKind;\n    readonly name: string;\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isFile: boolean;\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isDirectory: boolean;\n    constructor(mount: Mount, fhDir: Uint8Array, fh: Uint8Array, kind: FileSystemHandleKind, fullName: string, name: string) {\n        this._mount = mount;\n        this._fhDir = fhDir;\n        this._fh = fh;\n        this._fullName = fullName;\n        this.kind = kind;\n        this.name = name;\n        this.isFile = kind == \"file\";\n        this.isDirectory = kind == \"directory\";\n    }\n    isSameEntry(other: FileSystemHandle): Promise<boolean> {\n        return new Promise(async (resolve) => {\n            const anyOther = other as any;\n            if (anyOther._mount && anyOther._mount !== this._mount) {\n                resolve(false);\n            } else {\n                resolve(\n                    other.kind === this.kind &&\n                    other.name === this.name &&\n                    (!anyOther._fullName || anyOther._fullName === this._fullName)\n                );\n            }\n        });\n    }\n    async queryPermission(perm?: NfsHandlePermissionDescriptor): Promise<PermissionState> {\n        return new Promise(async (resolve, reject) => {\n            const mode = perm?.mode === \"readwrite\" ? AccessReadWrite : AccessRead;\n            const ret = nfsComponent.access(this._mount, this._fh, mode);\n            if (ret !== 0) {\n                // XXX: ACCESS3_EXECUTE may be omitted for root directory access but we should still return 'granted'\n                resolve(\n                    ret === mode || (this._fullName === \"/\" && (ret | ACCESS3_EXECUTE) === mode) ? \"granted\" : \"denied\"\n                );\n            } else {\n                reject(\"access denied\");\n            }\n        });\n    }\n    async requestPermission(perm: NfsHandlePermissionDescriptor): Promise<PermissionState> {\n        return new Promise(async (resolve, reject) => {\n            const mode = perm.mode === \"readwrite\" ? AccessReadWrite : AccessRead;\n            try {\n                nfsComponent.setattr(this._mount, this._fh, null, mode, null, null, null, null, null);\n                resolve(\"granted\");\n            } catch (e: any) {\n                if (e.payload?.nfsErrorCode === NFS3ERR_PERM || e.payload?.nfsErrorCode === NFS3ERR_ACCES) {\n                    resolve(\"denied\");\n                } else {\n                    reject(e);\n                }\n            }\n        });\n    }\n}\n\nexport class NfsDirectoryHandle extends NfsHandle implements FileSystemDirectoryHandle {\n    [Symbol.asyncIterator]: NfsDirectoryHandle[\"entries\"] = this.entries;\n    readonly kind: \"directory\";\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isFile: false;\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isDirectory: true;\n    constructor(url: string);\n    constructor(toWrap: NfsHandle);\n    constructor(param: string | NfsHandle) {\n        var mount: Mount;\n        var fhDir: Uint8Array;\n        var fh: Uint8Array;\n        var kind: FileSystemHandleKind;\n        var fullName: string;\n        var name: string;\n        if (typeof param === \"string\") {\n            const url = param;\n            mount = nfsComponent.parseUrlAndMount(url);\n            fh = nfsComponent.lookupPath(mount, \"/\");\n            fhDir = fh;\n            kind = \"directory\";\n            fullName = \"/\";\n            name = \"\";\n        } else {\n            const toWrap = param as NfsDirectoryHandle;\n            mount = toWrap._mount;\n            fhDir = toWrap._fhDir;\n            fh = toWrap._fh;\n            kind = toWrap.kind;\n            fullName = toWrap._fullName;\n            name = toWrap.name;\n        }\n        super(mount, fhDir, fh, kind, fullName, name);\n        this[Symbol.asyncIterator] = this.entries;\n        this.kind = \"directory\";\n        this.isFile = false;\n        this.isDirectory = true;\n        this.getFile = this.getFileHandle;\n        this.getDirectory = this.getDirectoryHandle;\n        this.getEntries = this.values;\n    }\n    private async *entryHandles(): AsyncIterableIterator<FileSystemDirectoryHandle | FileSystemFileHandle> {\n        try {\n            const entries = nfsComponent.readdirplus(this._mount, this._fh);\n            for (const entry of entries) {\n                if (entry.fileName !== \".\" && entry.fileName !== \"..\") {\n                    const fullName = fullNameFromReaddirplusEntry(this._fullName, entry);\n                    if (fullName.endsWith(\"/\")) {\n                        yield new NfsDirectoryHandle(\n                            new NfsHandle(this._mount, this._fh, entry.handle, \"directory\", fullName, entry.fileName)\n                        );\n                    } else {\n                        yield new NfsFileHandle(\n                            new NfsHandle(this._mount, this._fh, entry.handle, \"file\", fullName, entry.fileName)\n                        );\n                    }\n                }\n            }\n        } catch (e: any) {\n            if (\n                e.payload?.nfsErrorCode === NFS3ERR_NOENT ||\n                e.payload?.nfsErrorCode === NFS3ERR_NOTDIR ||\n                e.payload?.nfsErrorCode === NFS3ERR_STALE\n            ) {\n                throw new NotFoundError();\n            }\n            throw e;\n        }\n    }\n    async *entries(): AsyncIterableIterator<[string, FileSystemDirectoryHandle | FileSystemFileHandle]> {\n        for await (const entry of this.entryHandles()) {\n            yield [entry.name, entry];\n        }\n    }\n    async *keys(): AsyncIterableIterator<string> {\n        for await (const entry of this.entryHandles()) {\n            yield entry.name;\n        }\n    }\n    async *values(): AsyncIterableIterator<FileSystemDirectoryHandle | FileSystemFileHandle> {\n        for await (const entry of this.entryHandles()) {\n            yield entry;\n        }\n    }\n    async getDirectoryHandle(\n        name: string,\n        options?: FileSystemGetDirectoryOptions\n    ): Promise<FileSystemDirectoryHandle> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                PreNameCheck(name);\n                const fh = nfsComponent.lookup(this._mount, this._fh, name);\n                const attr = nfsComponent.getattr(this._mount, fh);\n                if (attr.attrType !== AttrTypeDirectory) {\n                    return reject(new TypeMismatchError());\n                }\n                return resolve(\n                    new NfsDirectoryHandle(\n                        new NfsHandle(this._mount, this._fh, fh, \"directory\", this._fullName + name + \"/\", name)\n                    ) as FileSystemDirectoryHandle\n                );\n            } catch (e: any) {\n                if (e instanceof TypeError) {\n                    return reject(e);\n                }\n                // XXX: ignore error\n            }\n\n            if (!options?.create) {\n                return reject(new NotFoundError());\n            }\n\n            try {\n                const mode = 0o775;\n                const fh = nfsComponent.mkdir(this._mount, this._fh, name, mode);\n                return resolve(\n                    new NfsDirectoryHandle(\n                        new NfsHandle(this._mount, this._fh, fh, \"directory\", this._fullName + name + \"/\", name)\n                    ) as FileSystemDirectoryHandle\n                );\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    async getFileHandle(name: string, options?: FileSystemGetFileOptions): Promise<FileSystemFileHandle> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                PreNameCheck(name);\n                const fh = nfsComponent.lookup(this._mount, this._fh, name);\n                const attr = nfsComponent.getattr(this._mount, fh);\n                if (attr.attrType === AttrTypeDirectory) {\n                    return reject(new TypeMismatchError());\n                }\n                return resolve(\n                    new NfsFileHandle(\n                        new NfsHandle(this._mount, this._fh, fh, \"file\", this._fullName + name, name)\n                    ) as FileSystemFileHandle\n                );\n            } catch (e: any) {\n                if (e instanceof TypeError) {\n                    return reject(e);\n                }\n                // XXX: ignore error\n            }\n\n            if (!options?.create) {\n                return reject(new NotFoundError());\n            }\n\n            try {\n                const mode = 0o664;\n                nfsComponent.create(this._mount, this._fh, name, mode); // XXX: ignore returned file handle and obtain one via lookup instead - workaround for go-nfs bug\n                const fh = nfsComponent.lookup(this._mount, this._fh, name);\n                return resolve(\n                    new NfsFileHandle(\n                        new NfsHandle(this._mount, this._fh, fh, \"file\", this._fullName + name, name)\n                    ) as FileSystemFileHandle\n                );\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    async removeEntry(name: string, options?: FileSystemRemoveOptions): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                PreNameCheck(name);\n                const fh = nfsComponent.lookup(this._mount, this._fh, name);\n                const attr = nfsComponent.getattr(this._mount, fh);\n                if (attr.attrType === AttrTypeDirectory) {\n                    this.removeDirectory(fh, this._fh, name, !!options?.recursive);\n                } else {\n                    nfsComponent.remove(this._mount, this._fh, name);\n                }\n                return resolve();\n            } catch (e: any) {\n                if (e.payload?.nfsErrorCode === NFS3ERR_NOENT || e.payload?.nfsErrorCode === NFS3ERR_STALE) {\n                    return reject(new NotFoundError());\n                } else if (e.payload?.nfsErrorCode === NFS3ERR_IO || e.payload?.nfsErrorCode === NFS3ERR_NOTEMPTY) {\n                    return reject(new InvalidModificationError());\n                }\n                return reject(e);\n            }\n        });\n    }\n    private removeDirectory(fh: Uint8Array, parent: Uint8Array, name: string, recursive: boolean) {\n        if (recursive) {\n            const entries = nfsComponent.readdirplus(this._mount, fh);\n            for (const entry of entries) {\n                if (entry.fileName !== \".\" && entry.fileName !== \"..\") {\n                    if (entry.attr?.attrType === AttrTypeDirectory) {\n                        this.removeDirectory(entry.handle, fh, entry.fileName, recursive);\n                    } else {\n                        nfsComponent.remove(this._mount, fh, entry.fileName);\n                    }\n                }\n            }\n        }\n        nfsComponent.rmdir(this._mount, parent, name);\n    }\n    async resolve(possibleDescendant: FileSystemHandle): Promise<Array<string> | null> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const anyPossibleDescendant = possibleDescendant as any;\n                if (anyPossibleDescendant._mount && anyPossibleDescendant._mount !== this._mount) {\n                    return resolve(null); // FIXME: reject instead?\n                }\n\n                const ret = await this.resolveDirectory(this.values(), possibleDescendant);\n                return resolve(ret);\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    private async resolveDirectory(\n        subentries: AsyncIterableIterator<FileSystemDirectoryHandle | FileSystemFileHandle>,\n        possibleDescendant: FileSystemHandle\n    ): Promise<Array<string> | null> {\n        for await (const subentry of subentries) {\n            if (await subentry.isSameEntry(possibleDescendant)) {\n                const ret = subentry.name.substring(1).split(\"/\");\n                ret.pop();\n                return ret;\n            }\n            if (subentry.kind === \"directory\") {\n                const nfsEntry = subentry as NfsDirectoryHandle;\n                const ret = await this.resolveDirectory(nfsEntry.values(), possibleDescendant);\n                if (ret) {\n                    return ret;\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `.getFileHandle()` in the new API.\n     */\n    getFile: NfsDirectoryHandle[\"getFileHandle\"];\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `.getDirectoryHandle()` in the new API.\n     */\n    getDirectory: NfsDirectoryHandle[\"getDirectoryHandle\"];\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `.keys()`, `.values()`, `.entries()`, or the directory itself as an async iterable in the new API.\n     */\n    getEntries: NfsDirectoryHandle[\"values\"];\n}\n\nexport class NfsFileHandle extends NfsHandle implements FileSystemFileHandle {\n    readonly kind: \"file\";\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isFile: true;\n    /**\n     * @deprecated Old property just for Chromium <=85. Use `kind` property in the new API.\n     */\n    readonly isDirectory: false;\n    constructor(param: NfsHandle) {\n        const toWrap = param as NfsFileHandle;\n        super(toWrap._mount, toWrap._fhDir, toWrap._fh, toWrap.kind, toWrap._fullName, toWrap.name);\n        this.kind = \"file\";\n        this.isFile = true;\n        this.isDirectory = false;\n    }\n    async getFile(): Promise<File> {\n        return new Promise((resolve, reject) => {\n            try {\n                const file = new NfsFile(this._mount, this._fh, this.name) as unknown;\n                return resolve(file as File);\n            } catch (e: any) {\n                if (e.payload?.nfsErrorCode === NFS3ERR_NOENT || e.payload?.nfsErrorCode === NFS3ERR_STALE) {\n                    return reject(new NotFoundError());\n                }\n                return reject(e);\n            }\n        });\n    }\n    async createWritable(options?: FileSystemCreateWritableOptions): Promise<FileSystemWritableFileStream> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const sink = new NfsSink(this._mount, this._fhDir, this._fh, this._fullName, options);\n                return resolve(new NFileSystemWritableFileStream(sink));\n            } catch (e: any) {\n                // XXX: after changing things so as to retain directory file handle, seems we get\n                //      NFS3ERR_ACCES if relevant directory has been deleted (at least from go-nfs)\n                if (e.payload?.nfsErrorCode === NFS3ERR_NOENT || e.payload?.nfsErrorCode === NFS3ERR_ACCES || e.payload?.nfsErrorCode === NFS3ERR_STALE) {\n                    return reject(new NotFoundError());\n                }\n                return reject(e);\n            }\n        });\n    }\n    async createSyncAccessHandle(): Promise<FileSystemSyncAccessHandle> {\n        throw new Error(\"not supported\"); // FIXME: add support?\n    }\n}\n\n// @ts-ignore\nexport class NfsFile implements File {\n    prototype: File;\n    private _mount: Mount;\n    private _fh: Uint8Array;\n    lastModified: number;\n    name: string;\n    webkitRelativePath: string;\n    size: number;\n    type: string;\n    constructor(mount: Mount, fh: Uint8Array, name: string) {\n        const attr = nfsComponent.getattr(mount, fh);\n\n        this.prototype = new File([], name);\n        this._mount = mount;\n        this._fh = fh;\n        this.lastModified = attr.mtime.seconds * 1000 + attr.mtime.nseconds / 1000;\n        this.name = name;\n        this.webkitRelativePath = name;\n        this.size = Number(attr.filesize);\n        this.type = \"unknown\";\n    }\n    private uint8Array(start?: number | undefined, end?: number | undefined): Uint8Array {\n        let idx = 0;\n        let pos = start || 0;\n        let size = Math.max((end ? end : this.size) - pos, 0);\n        const buf = new Uint8Array(size);\n        while (size > 0) {\n            const count = Math.min(size, MAX_READ_SIZE);\n            const chunk = nfsComponent.read(this._mount, this._fh, BigInt(pos), count);\n            buf.set(chunk, idx);\n            idx += chunk.byteLength;\n            pos += count;\n            size -= count;\n        }\n        return buf;\n    }\n    arrayBuffer(): Promise<ArrayBuffer> {\n        return new Promise(async (resolve, reject) => {\n            try {\n                return resolve(this.uint8Array());\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    slice(start?: number | undefined, end?: number | undefined, contentType?: string | undefined): Blob {\n        const buf = this.uint8Array(start, end);\n        const blob = new NfsBlob(this._mount, this._fh, buf, contentType) as unknown;\n        return blob as Blob;\n    }\n    stream(): ReadableStream<Uint8Array> {\n        var pulled = false;\n        const file = this;\n        return new ReadableStream({\n            type: \"bytes\",\n            pull(controller) {\n                if (!pulled) {\n                    const buf = file.uint8Array();\n                    controller.enqueue(buf);\n                    pulled = true;\n                } else {\n                    controller.close();\n                }\n            },\n        });\n    }\n    text(): Promise<string> {\n        return this.arrayBuffer().then((buf) => {\n            const decoder = new TextDecoder(\"utf-8\");\n            return decoder.decode(buf);\n        });\n    }\n}\n\n// @ts-ignore\nexport class NfsBlob implements Blob {\n    prototype: Blob;\n    private _mount: Mount;\n    private _fh: Uint8Array;\n    private _data: Uint8Array;\n    size: number;\n    type: string;\n    constructor(mount: Mount, fh: Uint8Array, data: Uint8Array, contentType?: string | undefined) {\n        this.prototype = new Blob();\n        this._mount = mount;\n        this._fh = fh;\n        this._data = data;\n        this.size = data.byteLength;\n        this.type = contentType || \"unknown\";\n    }\n    arrayBuffer(): Promise<ArrayBuffer> {\n        return new Promise(async (resolve) => resolve(this._data));\n    }\n    slice(start?: number | undefined, end?: number | undefined, contentType?: string | undefined): Blob {\n        const blob = new NfsBlob(this._mount, this._fh, this._data.slice(start, end), contentType) as unknown;\n        return blob as Blob;\n    }\n    stream(): ReadableStream<Uint8Array> {\n        var pulled = false;\n        const data = this._data;\n        return new ReadableStream({\n            type: \"bytes\",\n            pull(controller) {\n                if (!pulled) {\n                    controller.enqueue(data);\n                    pulled = true;\n                } else {\n                    controller.close();\n                }\n            },\n        });\n    }\n    text(): Promise<string> {\n        return this.arrayBuffer().then((buf) => {\n            const decoder = new TextDecoder(\"utf-8\");\n            return decoder.decode(buf);\n        });\n    }\n}\n\nexport class NfsSink implements FileSystemWritableFileStream {\n    private _mount: Mount;\n    private _fhDir: Uint8Array;\n    private _fh: Uint8Array;\n    private _fhTmp: Uint8Array;\n    private _fileNameTmp: string;\n    private _keepExisting: boolean;\n    private _valid: boolean;\n    private _locked: boolean;\n    private _orgSize: number;\n    private _newSize: number;\n    private _position: number;\n    constructor(mount: Mount, fhDir: Uint8Array, fh: Uint8Array, fullName: string, options?: FileSystemCreateWritableOptions) {\n        const x = fullName.lastIndexOf(\"/\");\n        const fileName = fullName.slice(x + 1);\n        const fileNameTmp = \".\" + fileName + \"-tmp\" + Date.now();\n\n        this._mount = mount;\n        this._fhDir = fhDir;\n        this._fh = fh;\n        this._fhTmp = nfsComponent.create(mount, this._fhDir, fileNameTmp, 0o664);\n        this._fileNameTmp = fileNameTmp;\n        this._keepExisting = !!options?.keepExistingData;\n        this._valid = true;\n        this._locked = false;\n        this._orgSize = Number(nfsComponent.getattr(mount, fh).filesize);\n        this._newSize = this._keepExisting ? this._orgSize : 0;\n        this._position = 0;\n    }\n    get locked() {\n        return this._locked;\n    }\n    private copyContents(fhFrom: Uint8Array, fhTo: Uint8Array, size: number) {\n        let pos = 0n;\n        while (size > 0) {\n            const count = Math.min(size, MAX_READ_SIZE);\n            const contents = nfsComponent.read(this._mount, fhFrom, pos, count);\n            nfsComponent.write(this._mount, fhTo, pos, contents);\n            pos += BigInt(count);\n            size -= count;\n        }\n    }\n    private ensureExistingIfToBeKept() {\n        if (this._keepExisting) {\n            if (this._orgSize > 0) {\n                this.copyContents(this._fh, this._fhTmp, this._orgSize);\n            }\n            this._keepExisting = false;\n        }\n    }\n    async write(data: FileSystemWriteChunkType): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            const anyData = data as any;\n            if (anyData.type === \"seek\") {\n                if (!(\"position\" in anyData) || typeof anyData.position !== \"number\") {\n                    return reject(new SyntaxError(\"seek requires a position argument\"));\n                }\n                await this.seek(anyData.position)\n                    .then(() => resolve())\n                    .catch((e) => reject(e));\n                return;\n            }\n            if (anyData.type === \"truncate\") {\n                if (!(\"size\" in anyData) || typeof anyData.size !== \"number\") {\n                    return reject(new SyntaxError(\"truncate requires a size argument\"));\n                }\n                await this.truncate(anyData.size)\n                    .then(() => resolve())\n                    .catch((e) => reject(e));\n                return;\n            }\n\n            var buffer: ArrayBuffer;\n            if (anyData.type === \"write\") {\n                if (!(\"data\" in anyData)) {\n                    return reject(new SyntaxError(\"write requires a data argument\"));\n                }\n                if (\"position\" in anyData) {\n                    await this.seek(anyData.position);\n                }\n                data = anyData.data;\n            }\n\n            if (data instanceof ArrayBuffer) {\n                buffer = data;\n            } else if (ArrayBuffer.isView(data)) {\n                buffer = data as any;\n            } else if (data instanceof DataView) {\n                buffer = data.buffer;\n            } else if (data instanceof Blob) {\n                buffer = await data.arrayBuffer();\n            } else if (data instanceof String) {\n                const encoder = new TextEncoder();\n                buffer = encoder.encode(data.toString());\n            } else {\n                const encoder = new TextEncoder();\n                buffer = encoder.encode(data as string);\n            }\n\n            try {\n                this.ensureExistingIfToBeKept();\n                nfsComponent.write(this._mount, this._fhTmp, BigInt(this._position), buffer);\n                this._position += buffer.byteLength;\n                if (this._position > this._newSize) {\n                    this._newSize = this._position;\n                }\n                return resolve();\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    async seek(position: number): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            this._position = position;\n            return resolve();\n        });\n    }\n    async truncate(size: number): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            try {\n                this.ensureExistingIfToBeKept();\n                nfsComponent.setattr(this._mount, this._fhTmp, null, null, null, null, BigInt(size), null, null);\n                if (this._position > size) {\n                    this._position = size;\n                }\n                this._newSize = size;\n                return resolve();\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    async close(): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            try {\n                if (!this._keepExisting) {\n                    // XXX: if this._keepExisting is still set, no writes or truncates have occurred\n                    this.copyContents(this._fhTmp, this._fh, this._newSize);\n                    if (this._newSize < this._orgSize) {\n                        nfsComponent.setattr(this._mount, this._fh, null, null, null, null, BigInt(this._newSize), null, null);\n                    }\n                }\n                nfsComponent.remove(this._mount, this._fhDir, this._fileNameTmp);\n                this._valid = false;\n                return resolve();\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    async abort(_reason: string): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (!this._valid) {\n                return reject(new TypeError(\"invalid stream\"));\n            }\n            try {\n                nfsComponent.remove(this._mount, this._fhDir, this._fileNameTmp);\n                this._valid = false;\n                return resolve();\n            } catch (e: any) {\n                return reject(e);\n            }\n        });\n    }\n    getWriter(): WritableStreamDefaultWriter {\n        if (!this._valid) {\n            throw new TypeError(\"invalid stream\");\n        }\n        if (this.locked) {\n            throw new Error(\"Invalid state: WritableStream is locked\");\n        }\n\n        const fileStream = this;\n        const stream = new WritableStream({\n            abort(reason) {\n                return fileStream.abort(reason);\n            },\n            close() {\n                return fileStream.close();\n            },\n            write(chunk, _controller) {\n                return fileStream.write(chunk);\n            },\n        });\n        const writer = new WritableStreamDefaultWriter(stream);\n        const anyWriter = writer as any;\n        fileStream._locked = true;\n        anyWriter._releaseLock = writer.releaseLock;\n        anyWriter.releaseLock = () => {\n            anyWriter._releaseLock();\n            fileStream._locked = false;\n        };\n        return writer;\n    }\n}\n\nexport const nfs = (path: string) => new NfsDirectoryHandle(path);\nexport default nfs;\n"]}